// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: match_result.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//赛况
type MatchResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId int64 `protobuf:"varint,1,opt,name=MatchId,proto3" json:"MatchId,omitempty"` //联赛id：46
}

func (x *MatchResultRequest) Reset() {
	*x = MatchResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResultRequest) ProtoMessage() {}

func (x *MatchResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResultRequest.ProtoReflect.Descriptor instead.
func (*MatchResultRequest) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{0}
}

func (x *MatchResultRequest) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type MatchResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreStatistics *Score         `protobuf:"bytes,1,opt,name=ScoreStatistics,proto3" json:"ScoreStatistics,omitempty"`
	HomeScore       *BestOf        `protobuf:"bytes,3,opt,name=HomeScore,proto3" json:"HomeScore,omitempty"`
	HomeRebounds    *BestOf        `protobuf:"bytes,4,opt,name=HomeRebounds,proto3" json:"HomeRebounds,omitempty"`
	HomeAssists     *BestOf        `protobuf:"bytes,5,opt,name=HomeAssists,proto3" json:"HomeAssists,omitempty"`
	HomeSteals      *BestOf        `protobuf:"bytes,6,opt,name=HomeSteals,proto3" json:"HomeSteals,omitempty"`
	HomeBlocks      *BestOf        `protobuf:"bytes,7,opt,name=HomeBlocks,proto3" json:"HomeBlocks,omitempty"`
	AwayScore       *BestOf        `protobuf:"bytes,9,opt,name=AwayScore,proto3" json:"AwayScore,omitempty"`
	AwayRebounds    *BestOf        `protobuf:"bytes,10,opt,name=AwayRebounds,proto3" json:"AwayRebounds,omitempty"`
	AwayAssists     *BestOf        `protobuf:"bytes,15,opt,name=AwayAssists,proto3" json:"AwayAssists,omitempty"`
	AwaySteals      *BestOf        `protobuf:"bytes,16,opt,name=AwaySteals,proto3" json:"AwaySteals,omitempty"`
	AwayBlocks      *BestOf        `protobuf:"bytes,17,opt,name=AwayBlocks,proto3" json:"AwayBlocks,omitempty"`
	HomeTeamStats   *TeamStats     `protobuf:"bytes,8,opt,name=HomeTeamStats,proto3" json:"HomeTeamStats,omitempty"`
	AwayTeamStats   *TeamStats     `protobuf:"bytes,11,opt,name=AwayTeamStats,proto3" json:"AwayTeamStats,omitempty"`
	HomePlayerStats []*PlayerStats `protobuf:"bytes,12,rep,name=HomePlayerStats,proto3" json:"HomePlayerStats,omitempty"`
	AwayPlayerStats []*PlayerStats `protobuf:"bytes,13,rep,name=AwayPlayerStats,proto3" json:"AwayPlayerStats,omitempty"`
}

func (x *MatchResultResponse) Reset() {
	*x = MatchResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResultResponse) ProtoMessage() {}

func (x *MatchResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResultResponse.ProtoReflect.Descriptor instead.
func (*MatchResultResponse) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{1}
}

func (x *MatchResultResponse) GetScoreStatistics() *Score {
	if x != nil {
		return x.ScoreStatistics
	}
	return nil
}

func (x *MatchResultResponse) GetHomeScore() *BestOf {
	if x != nil {
		return x.HomeScore
	}
	return nil
}

func (x *MatchResultResponse) GetHomeRebounds() *BestOf {
	if x != nil {
		return x.HomeRebounds
	}
	return nil
}

func (x *MatchResultResponse) GetHomeAssists() *BestOf {
	if x != nil {
		return x.HomeAssists
	}
	return nil
}

func (x *MatchResultResponse) GetHomeSteals() *BestOf {
	if x != nil {
		return x.HomeSteals
	}
	return nil
}

func (x *MatchResultResponse) GetHomeBlocks() *BestOf {
	if x != nil {
		return x.HomeBlocks
	}
	return nil
}

func (x *MatchResultResponse) GetAwayScore() *BestOf {
	if x != nil {
		return x.AwayScore
	}
	return nil
}

func (x *MatchResultResponse) GetAwayRebounds() *BestOf {
	if x != nil {
		return x.AwayRebounds
	}
	return nil
}

func (x *MatchResultResponse) GetAwayAssists() *BestOf {
	if x != nil {
		return x.AwayAssists
	}
	return nil
}

func (x *MatchResultResponse) GetAwaySteals() *BestOf {
	if x != nil {
		return x.AwaySteals
	}
	return nil
}

func (x *MatchResultResponse) GetAwayBlocks() *BestOf {
	if x != nil {
		return x.AwayBlocks
	}
	return nil
}

func (x *MatchResultResponse) GetHomeTeamStats() *TeamStats {
	if x != nil {
		return x.HomeTeamStats
	}
	return nil
}

func (x *MatchResultResponse) GetAwayTeamStats() *TeamStats {
	if x != nil {
		return x.AwayTeamStats
	}
	return nil
}

func (x *MatchResultResponse) GetHomePlayerStats() []*PlayerStats {
	if x != nil {
		return x.HomePlayerStats
	}
	return nil
}

func (x *MatchResultResponse) GetAwayPlayerStats() []*PlayerStats {
	if x != nil {
		return x.AwayPlayerStats
	}
	return nil
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag        []string `protobuf:"bytes,1,rep,name=Tag,proto3" json:"Tag,omitempty"`
	MainScore  []int64  `protobuf:"varint,3,rep,packed,name=MainScore,proto3" json:"MainScore,omitempty"`
	AwayScore  []int64  `protobuf:"varint,4,rep,packed,name=AwayScore,proto3" json:"AwayScore,omitempty"`
	Difference []int64  `protobuf:"varint,5,rep,packed,name=Difference,proto3" json:"Difference,omitempty"`
	MainFoul   int64    `protobuf:"varint,6,opt,name=MainFoul,proto3" json:"MainFoul,omitempty"`
	AwayFoul   int64    `protobuf:"varint,7,opt,name=AwayFoul,proto3" json:"AwayFoul,omitempty"`
	MainStop   int64    `protobuf:"varint,9,opt,name=MainStop,proto3" json:"MainStop,omitempty"`
	AwayStop   int64    `protobuf:"varint,2,opt,name=AwayStop,proto3" json:"AwayStop,omitempty"`
	MainImage  string   `protobuf:"bytes,15,opt,name=MainImage,proto3" json:"MainImage,omitempty"`
	AwayImage  string   `protobuf:"bytes,16,opt,name=AwayImage,proto3" json:"AwayImage,omitempty"`
	MainName   string   `protobuf:"bytes,17,opt,name=MainName,proto3" json:"MainName,omitempty"`
	AwayName   string   `protobuf:"bytes,18,opt,name=AwayName,proto3" json:"AwayName,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{2}
}

func (x *Score) GetTag() []string {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *Score) GetMainScore() []int64 {
	if x != nil {
		return x.MainScore
	}
	return nil
}

func (x *Score) GetAwayScore() []int64 {
	if x != nil {
		return x.AwayScore
	}
	return nil
}

func (x *Score) GetDifference() []int64 {
	if x != nil {
		return x.Difference
	}
	return nil
}

func (x *Score) GetMainFoul() int64 {
	if x != nil {
		return x.MainFoul
	}
	return 0
}

func (x *Score) GetAwayFoul() int64 {
	if x != nil {
		return x.AwayFoul
	}
	return 0
}

func (x *Score) GetMainStop() int64 {
	if x != nil {
		return x.MainStop
	}
	return 0
}

func (x *Score) GetAwayStop() int64 {
	if x != nil {
		return x.AwayStop
	}
	return 0
}

func (x *Score) GetMainImage() string {
	if x != nil {
		return x.MainImage
	}
	return ""
}

func (x *Score) GetAwayImage() string {
	if x != nil {
		return x.AwayImage
	}
	return ""
}

func (x *Score) GetMainName() string {
	if x != nil {
		return x.MainName
	}
	return ""
}

func (x *Score) GetAwayName() string {
	if x != nil {
		return x.AwayName
	}
	return ""
}

type OverTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OverTime) Reset() {
	*x = OverTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverTime) ProtoMessage() {}

func (x *OverTime) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverTime.ProtoReflect.Descriptor instead.
func (*OverTime) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{3}
}

func (x *OverTime) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OverTime) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BestOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BestOf) Reset() {
	*x = BestOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BestOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BestOf) ProtoMessage() {}

func (x *BestOf) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BestOf.ProtoReflect.Descriptor instead.
func (*BestOf) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{4}
}

func (x *BestOf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BestOf) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type TeamStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score     int64 `protobuf:"varint,1,opt,name=Score,proto3" json:"Score,omitempty"`
	Rebounds  int64 `protobuf:"varint,2,opt,name=Rebounds,proto3" json:"Rebounds,omitempty"`
	Assists   int64 `protobuf:"varint,3,opt,name=Assists,proto3" json:"Assists,omitempty"`
	Steals    int64 `protobuf:"varint,4,opt,name=Steals,proto3" json:"Steals,omitempty"`
	Blocks    int64 `protobuf:"varint,5,opt,name=Blocks,proto3" json:"Blocks,omitempty"`
	Turnovers int64 `protobuf:"varint,6,opt,name=Turnovers,proto3" json:"Turnovers,omitempty"`
}

func (x *TeamStats) Reset() {
	*x = TeamStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStats) ProtoMessage() {}

func (x *TeamStats) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStats.ProtoReflect.Descriptor instead.
func (*TeamStats) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{5}
}

func (x *TeamStats) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TeamStats) GetRebounds() int64 {
	if x != nil {
		return x.Rebounds
	}
	return 0
}

func (x *TeamStats) GetAssists() int64 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *TeamStats) GetSteals() int64 {
	if x != nil {
		return x.Steals
	}
	return 0
}

func (x *TeamStats) GetBlocks() int64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *TeamStats) GetTurnovers() int64 {
	if x != nil {
		return x.Turnovers
	}
	return 0
}

type PlayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Started       string `protobuf:"bytes,2,opt,name=Started,proto3" json:"Started,omitempty"`                                  //首发
	MinutesPlayed string `protobuf:"bytes,3,opt,name=Minutes_played,json=MinutesPlayed,proto3" json:"Minutes_played,omitempty"` //上场时间
	Score         int64  `protobuf:"varint,4,opt,name=Score,proto3" json:"Score,omitempty"`                                     //得分
	Rebounds      int64  `protobuf:"varint,5,opt,name=Rebounds,proto3" json:"Rebounds,omitempty"`                               //篮板
	Assists       int64  `protobuf:"varint,6,opt,name=Assists,proto3" json:"Assists,omitempty"`                                 //助攻
	ThreePoint    int64  `protobuf:"varint,7,opt,name=ThreePoint,proto3" json:"ThreePoint,omitempty"`                           //三分
	FreeThrows    int64  `protobuf:"varint,8,opt,name=FreeThrows,proto3" json:"FreeThrows,omitempty"`                           //罚球
	Steals        int64  `protobuf:"varint,9,opt,name=Steals,proto3" json:"Steals,omitempty"`                                   //抢断
	Blocks        int64  `protobuf:"varint,10,opt,name=Blocks,proto3" json:"Blocks,omitempty"`                                  //盖帽
	Turnovers     int64  `protobuf:"varint,11,opt,name=Turnovers,proto3" json:"Turnovers,omitempty"`                            //失误
	Fouls         int64  `protobuf:"varint,12,opt,name=Fouls,proto3" json:"Fouls,omitempty"`                                    //犯规
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_result_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_match_result_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_match_result_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerStats) GetStarted() string {
	if x != nil {
		return x.Started
	}
	return ""
}

func (x *PlayerStats) GetMinutesPlayed() string {
	if x != nil {
		return x.MinutesPlayed
	}
	return ""
}

func (x *PlayerStats) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerStats) GetRebounds() int64 {
	if x != nil {
		return x.Rebounds
	}
	return 0
}

func (x *PlayerStats) GetAssists() int64 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerStats) GetThreePoint() int64 {
	if x != nil {
		return x.ThreePoint
	}
	return 0
}

func (x *PlayerStats) GetFreeThrows() int64 {
	if x != nil {
		return x.FreeThrows
	}
	return 0
}

func (x *PlayerStats) GetSteals() int64 {
	if x != nil {
		return x.Steals
	}
	return 0
}

func (x *PlayerStats) GetBlocks() int64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *PlayerStats) GetTurnovers() int64 {
	if x != nil {
		return x.Turnovers
	}
	return 0
}

func (x *PlayerStats) GetFouls() int64 {
	if x != nil {
		return x.Fouls
	}
	return 0
}

var File_match_result_proto protoreflect.FileDescriptor

var file_match_result_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x22, 0xbd, 0x05, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0f,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0f, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x25,
	0x0a, 0x09, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x09, 0x48, 0x6f, 0x6d, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65,
	0x73, 0x74, 0x4f, 0x66, 0x52, 0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x29, 0x0a, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66,
	0x52, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x27, 0x0a,
	0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x0a, 0x48, 0x6f, 0x6d, 0x65,
	0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73,
	0x74, 0x4f, 0x66, 0x52, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x25, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x09, 0x41, 0x77, 0x61,
	0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x41, 0x77, 0x61, 0x79, 0x52, 0x65,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42,
	0x65, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x0c, 0x41, 0x77, 0x61, 0x79, 0x52, 0x65, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x0b, 0x41, 0x77, 0x61, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f,
	0x66, 0x52, 0x0b, 0x41, 0x77, 0x61, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x0a, 0x41, 0x77, 0x61, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x0a, 0x41, 0x77, 0x61,
	0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x0a, 0x41, 0x77, 0x61, 0x79, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x42, 0x65,
	0x73, 0x74, 0x4f, 0x66, 0x52, 0x0a, 0x41, 0x77, 0x61, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x30, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x0d, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0d, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0f, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0f, 0x48, 0x6f, 0x6d,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0f,
	0x41, 0x77, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x0f, 0x41, 0x77, 0x61, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x41, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x61, 0x69, 0x6e, 0x46, 0x6f, 0x75, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4d, 0x61, 0x69, 0x6e, 0x46, 0x6f, 0x75, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79,
	0x46, 0x6f, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79,
	0x46, 0x6f, 0x75, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x77,
	0x61, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x77, 0x61, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x34, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x06, 0x42, 0x65, 0x73, 0x74, 0x4f, 0x66,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x52, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x72, 0x73, 0x22, 0xd2, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x52, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x65, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x72, 0x65, 0x65, 0x54, 0x68, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6f, 0x75, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x46, 0x6f, 0x75, 0x6c, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_result_proto_rawDescOnce sync.Once
	file_match_result_proto_rawDescData = file_match_result_proto_rawDesc
)

func file_match_result_proto_rawDescGZIP() []byte {
	file_match_result_proto_rawDescOnce.Do(func() {
		file_match_result_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_result_proto_rawDescData)
	})
	return file_match_result_proto_rawDescData
}

var file_match_result_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_match_result_proto_goTypes = []interface{}{
	(*MatchResultRequest)(nil),  // 0: MatchResultRequest
	(*MatchResultResponse)(nil), // 1: MatchResultResponse
	(*Score)(nil),               // 2: Score
	(*OverTime)(nil),            // 3: OverTime
	(*BestOf)(nil),              // 4: BestOf
	(*TeamStats)(nil),           // 5: TeamStats
	(*PlayerStats)(nil),         // 6: PlayerStats
}
var file_match_result_proto_depIdxs = []int32{
	2,  // 0: MatchResultResponse.ScoreStatistics:type_name -> Score
	4,  // 1: MatchResultResponse.HomeScore:type_name -> BestOf
	4,  // 2: MatchResultResponse.HomeRebounds:type_name -> BestOf
	4,  // 3: MatchResultResponse.HomeAssists:type_name -> BestOf
	4,  // 4: MatchResultResponse.HomeSteals:type_name -> BestOf
	4,  // 5: MatchResultResponse.HomeBlocks:type_name -> BestOf
	4,  // 6: MatchResultResponse.AwayScore:type_name -> BestOf
	4,  // 7: MatchResultResponse.AwayRebounds:type_name -> BestOf
	4,  // 8: MatchResultResponse.AwayAssists:type_name -> BestOf
	4,  // 9: MatchResultResponse.AwaySteals:type_name -> BestOf
	4,  // 10: MatchResultResponse.AwayBlocks:type_name -> BestOf
	5,  // 11: MatchResultResponse.HomeTeamStats:type_name -> TeamStats
	5,  // 12: MatchResultResponse.AwayTeamStats:type_name -> TeamStats
	6,  // 13: MatchResultResponse.HomePlayerStats:type_name -> PlayerStats
	6,  // 14: MatchResultResponse.AwayPlayerStats:type_name -> PlayerStats
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_match_result_proto_init() }
func file_match_result_proto_init() {
	if File_match_result_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_result_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BestOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_result_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_result_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_result_proto_goTypes,
		DependencyIndexes: file_match_result_proto_depIdxs,
		MessageInfos:      file_match_result_proto_msgTypes,
	}.Build()
	File_match_result_proto = out.File
	file_match_result_proto_rawDesc = nil
	file_match_result_proto_goTypes = nil
	file_match_result_proto_depIdxs = nil
}
