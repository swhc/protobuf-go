// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: match_details_all.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//指数-列表
type FootMatchDetailAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"` //请求语言
	MatchId  int64  `protobuf:"varint,2,opt,name=MatchId,proto3" json:"MatchId,omitempty"`  //比赛id
	SportId  int64  `protobuf:"varint,3,opt,name=SportId,proto3" json:"SportId,omitempty"`  //运动id
}

func (x *FootMatchDetailAllRequest) Reset() {
	*x = FootMatchDetailAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllRequest) ProtoMessage() {}

func (x *FootMatchDetailAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllRequest.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllRequest) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{0}
}

func (x *FootMatchDetailAllRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *FootMatchDetailAllRequest) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *FootMatchDetailAllRequest) GetSportId() int64 {
	if x != nil {
		return x.SportId
	}
	return 0
}

type FootMatchDetailAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores        *FootMatchDetailAllScores          `protobuf:"bytes,1,opt,name=scores,proto3" json:"scores,omitempty"`
	Stadium       *FootMatchDetailAllStadium         `protobuf:"bytes,2,opt,name=stadium,proto3" json:"stadium,omitempty"`                                  //场馆状况-- 正在比赛能用到
	Coach         *FootMatchDetailAllCoach           `protobuf:"bytes,3,opt,name=coach,proto3" json:"coach,omitempty"`                                      //教练信息--目前只有篮球能用到
	Formation     *FootMatchDetailAllFormation       `protobuf:"bytes,4,opt,name=formation,proto3" json:"formation,omitempty"`                              //阵型
	Weather       *FootMatchDetailAllWeather         `protobuf:"bytes,5,opt,name=weather,proto3" json:"weather,omitempty"`                                  //天气信息
	Winner        int64                              `protobuf:"varint,8,opt,name=Winner,proto3" json:"Winner,omitempty"`                                   // 胜利方，0：未知，1：主队，2：客队，3：平局
	SeasonRanking []*FootMatchDetailAllSeasonRanking `protobuf:"bytes,6,rep,name=season_ranking,json=seasonRanking,proto3" json:"season_ranking,omitempty"` //赛季排名
	Statistics    []*FootMatchDetailAllStatistics    `protobuf:"bytes,7,rep,name=statistics,proto3" json:"statistics,omitempty"`                            //赛季排名
}

func (x *FootMatchDetailAllResponse) Reset() {
	*x = FootMatchDetailAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllResponse) ProtoMessage() {}

func (x *FootMatchDetailAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllResponse.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllResponse) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{1}
}

func (x *FootMatchDetailAllResponse) GetScores() *FootMatchDetailAllScores {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetStadium() *FootMatchDetailAllStadium {
	if x != nil {
		return x.Stadium
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetCoach() *FootMatchDetailAllCoach {
	if x != nil {
		return x.Coach
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetFormation() *FootMatchDetailAllFormation {
	if x != nil {
		return x.Formation
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetWeather() *FootMatchDetailAllWeather {
	if x != nil {
		return x.Weather
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetWinner() int64 {
	if x != nil {
		return x.Winner
	}
	return 0
}

func (x *FootMatchDetailAllResponse) GetSeasonRanking() []*FootMatchDetailAllSeasonRanking {
	if x != nil {
		return x.SeasonRanking
	}
	return nil
}

func (x *FootMatchDetailAllResponse) GetStatistics() []*FootMatchDetailAllStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type FootMatchDetailAllScores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeHalf   int64         `protobuf:"varint,1,opt,name=HomeHalf,proto3" json:"HomeHalf,omitempty"`                      //  主队半场得分数
	HomeScore  int64         `protobuf:"varint,2,opt,name=HomeScore,proto3" json:"HomeScore,omitempty"`                    //主队总得分
	AwayHalf   int64         `protobuf:"varint,3,opt,name=AwayHalf,proto3" json:"AwayHalf,omitempty"`                      //  客队半场得分数
	AwayScore  int64         `protobuf:"varint,4,opt,name=AwayScore,proto3" json:"AwayScore,omitempty"`                    //  客队总得分
	ScoresList []*ScoresList `protobuf:"bytes,5,rep,name=scores_list,json=scoresList,proto3" json:"scores_list,omitempty"` //实录得分状况
}

func (x *FootMatchDetailAllScores) Reset() {
	*x = FootMatchDetailAllScores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllScores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllScores) ProtoMessage() {}

func (x *FootMatchDetailAllScores) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllScores.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllScores) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{2}
}

func (x *FootMatchDetailAllScores) GetHomeHalf() int64 {
	if x != nil {
		return x.HomeHalf
	}
	return 0
}

func (x *FootMatchDetailAllScores) GetHomeScore() int64 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *FootMatchDetailAllScores) GetAwayHalf() int64 {
	if x != nil {
		return x.AwayHalf
	}
	return 0
}

func (x *FootMatchDetailAllScores) GetAwayScore() int64 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

func (x *FootMatchDetailAllScores) GetScoresList() []*ScoresList {
	if x != nil {
		return x.ScoresList
	}
	return nil
}

type ScoresList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team1 int64  `protobuf:"varint,1,opt,name=Team1,proto3" json:"Team1,omitempty"` //主队得分数
	Team2 int64  `protobuf:"varint,2,opt,name=Team2,proto3" json:"Team2,omitempty"` //客队得分数
	Type  string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`    //比分类型
}

func (x *ScoresList) Reset() {
	*x = ScoresList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoresList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoresList) ProtoMessage() {}

func (x *ScoresList) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoresList.ProtoReflect.Descriptor instead.
func (*ScoresList) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{3}
}

func (x *ScoresList) GetTeam1() int64 {
	if x != nil {
		return x.Team1
	}
	return 0
}

func (x *ScoresList) GetTeam2() int64 {
	if x != nil {
		return x.Team2
	}
	return 0
}

func (x *ScoresList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FootMatchDetailAllStadium struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StadiumId     int64  `protobuf:"varint,1,opt,name=StadiumId,proto3" json:"StadiumId,omitempty"`    //场馆id
	StadiumName   string `protobuf:"bytes,2,opt,name=StadiumName,proto3" json:"StadiumName,omitempty"` //场馆名称
	StStadiumName string `protobuf:"bytes,3,opt,name=StStadiumName,proto3" json:"StStadiumName,omitempty"`
}

func (x *FootMatchDetailAllStadium) Reset() {
	*x = FootMatchDetailAllStadium{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllStadium) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllStadium) ProtoMessage() {}

func (x *FootMatchDetailAllStadium) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllStadium.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllStadium) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{4}
}

func (x *FootMatchDetailAllStadium) GetStadiumId() int64 {
	if x != nil {
		return x.StadiumId
	}
	return 0
}

func (x *FootMatchDetailAllStadium) GetStadiumName() string {
	if x != nil {
		return x.StadiumName
	}
	return ""
}

func (x *FootMatchDetailAllStadium) GetStStadiumName() string {
	if x != nil {
		return x.StStadiumName
	}
	return ""
}

type FootMatchDetailAllCoach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwayCoachName string `protobuf:"bytes,1,opt,name=AwayCoachName,proto3" json:"AwayCoachName,omitempty"` //客队教练名称
	HomeCoachName string `protobuf:"bytes,2,opt,name=HomeCoachName,proto3" json:"HomeCoachName,omitempty"` //主队教练名称
}

func (x *FootMatchDetailAllCoach) Reset() {
	*x = FootMatchDetailAllCoach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllCoach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllCoach) ProtoMessage() {}

func (x *FootMatchDetailAllCoach) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllCoach.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllCoach) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{5}
}

func (x *FootMatchDetailAllCoach) GetAwayCoachName() string {
	if x != nil {
		return x.AwayCoachName
	}
	return ""
}

func (x *FootMatchDetailAllCoach) GetHomeCoachName() string {
	if x != nil {
		return x.HomeCoachName
	}
	return ""
}

type FootMatchDetailAllFormation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwayFormation string `protobuf:"bytes,1,opt,name=AwayFormation,proto3" json:"AwayFormation,omitempty"` // 客队阵型
	HomeFormation string `protobuf:"bytes,2,opt,name=HomeFormation,proto3" json:"HomeFormation,omitempty"` //主队阵型
}

func (x *FootMatchDetailAllFormation) Reset() {
	*x = FootMatchDetailAllFormation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllFormation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllFormation) ProtoMessage() {}

func (x *FootMatchDetailAllFormation) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllFormation.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllFormation) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{6}
}

func (x *FootMatchDetailAllFormation) GetAwayFormation() string {
	if x != nil {
		return x.AwayFormation
	}
	return ""
}

func (x *FootMatchDetailAllFormation) GetHomeFormation() string {
	if x != nil {
		return x.HomeFormation
	}
	return ""
}

type FootMatchDetailAllWeather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeatherStr  string `protobuf:"bytes,1,opt,name=WeatherStr,proto3" json:"WeatherStr,omitempty"`   //天气文字描述
	WeatherDesc string `protobuf:"bytes,2,opt,name=WeatherDesc,proto3" json:"WeatherDesc,omitempty"` //天气描述  实例如下
}

func (x *FootMatchDetailAllWeather) Reset() {
	*x = FootMatchDetailAllWeather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllWeather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllWeather) ProtoMessage() {}

func (x *FootMatchDetailAllWeather) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllWeather.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllWeather) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{7}
}

func (x *FootMatchDetailAllWeather) GetWeatherStr() string {
	if x != nil {
		return x.WeatherStr
	}
	return ""
}

func (x *FootMatchDetailAllWeather) GetWeatherDesc() string {
	if x != nil {
		return x.WeatherDesc
	}
	return ""
}

type FootMatchDetailAllSeasonRanking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64  `protobuf:"varint,1,opt,name=TeamId,proto3" json:"TeamId,omitempty"` //队伍id
	Value  string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`    //排名值
}

func (x *FootMatchDetailAllSeasonRanking) Reset() {
	*x = FootMatchDetailAllSeasonRanking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllSeasonRanking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllSeasonRanking) ProtoMessage() {}

func (x *FootMatchDetailAllSeasonRanking) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllSeasonRanking.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllSeasonRanking) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{8}
}

func (x *FootMatchDetailAllSeasonRanking) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *FootMatchDetailAllSeasonRanking) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FootMatchDetailAllStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId int64  `protobuf:"varint,1,opt,name=TypeId,proto3" json:"TypeId,omitempty"` //类型id
	Team1  int64  `protobuf:"varint,2,opt,name=Team1,proto3" json:"Team1,omitempty"`   //主队数据值
	Team2  int64  `protobuf:"varint,3,opt,name=Team2,proto3" json:"Team2,omitempty"`   //客队数据值
	Name   string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`      //类型名名称
}

func (x *FootMatchDetailAllStatistics) Reset() {
	*x = FootMatchDetailAllStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_details_all_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootMatchDetailAllStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootMatchDetailAllStatistics) ProtoMessage() {}

func (x *FootMatchDetailAllStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_match_details_all_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootMatchDetailAllStatistics.ProtoReflect.Descriptor instead.
func (*FootMatchDetailAllStatistics) Descriptor() ([]byte, []int) {
	return file_match_details_all_proto_rawDescGZIP(), []int{9}
}

func (x *FootMatchDetailAllStatistics) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *FootMatchDetailAllStatistics) GetTeam1() int64 {
	if x != nil {
		return x.Team1
	}
	return 0
}

func (x *FootMatchDetailAllStatistics) GetTeam2() int64 {
	if x != nil {
		return x.Team2
	}
	return 0
}

func (x *FootMatchDetailAllStatistics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_match_details_all_proto protoreflect.FileDescriptor

var file_match_details_all_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f,
	0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x19, 0x46, 0x6f, 0x6f,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0xc7, 0x03, 0x0a, 0x1a, 0x46, 0x6f, 0x6f, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x64,
	0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x6f, 0x6f, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x64, 0x69, 0x75, 0x6d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x2e,
	0x0a, 0x05, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x05, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x3a,
	0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x77, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x46, 0x6f,
	0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x22, 0xbc, 0x01, 0x0a, 0x18, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x61, 0x6c, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x61, 0x6c, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x6f, 0x6d,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x48, 0x6f,
	0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x48,
	0x61, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79, 0x48,
	0x61, 0x6c, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x4c, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x65, 0x61, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x65,
	0x61, 0x6d, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01,
	0x0a, 0x19, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x64, 0x69, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x53, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x74, 0x53, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x53, 0x74, 0x61, 0x64, 0x69, 0x75, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x65, 0x0a, 0x17, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x1b, 0x46, 0x6f, 0x6f, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x77, 0x61, 0x79, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x41, 0x77, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x19, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x22, 0x4f, 0x0a, 0x1f, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x76, 0x0a, 0x1c, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x65, 0x61, 0x6d, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x65, 0x61, 0x6d,
	0x31, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e,
	0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_details_all_proto_rawDescOnce sync.Once
	file_match_details_all_proto_rawDescData = file_match_details_all_proto_rawDesc
)

func file_match_details_all_proto_rawDescGZIP() []byte {
	file_match_details_all_proto_rawDescOnce.Do(func() {
		file_match_details_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_details_all_proto_rawDescData)
	})
	return file_match_details_all_proto_rawDescData
}

var file_match_details_all_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_match_details_all_proto_goTypes = []interface{}{
	(*FootMatchDetailAllRequest)(nil),       // 0: FootMatchDetailAllRequest
	(*FootMatchDetailAllResponse)(nil),      // 1: FootMatchDetailAllResponse
	(*FootMatchDetailAllScores)(nil),        // 2: FootMatchDetailAllScores
	(*ScoresList)(nil),                      // 3: ScoresList
	(*FootMatchDetailAllStadium)(nil),       // 4: FootMatchDetailAllStadium
	(*FootMatchDetailAllCoach)(nil),         // 5: FootMatchDetailAllCoach
	(*FootMatchDetailAllFormation)(nil),     // 6: FootMatchDetailAllFormation
	(*FootMatchDetailAllWeather)(nil),       // 7: FootMatchDetailAllWeather
	(*FootMatchDetailAllSeasonRanking)(nil), // 8: FootMatchDetailAllSeasonRanking
	(*FootMatchDetailAllStatistics)(nil),    // 9: FootMatchDetailAllStatistics
}
var file_match_details_all_proto_depIdxs = []int32{
	2, // 0: FootMatchDetailAllResponse.scores:type_name -> FootMatchDetailAllScores
	4, // 1: FootMatchDetailAllResponse.stadium:type_name -> FootMatchDetailAllStadium
	5, // 2: FootMatchDetailAllResponse.coach:type_name -> FootMatchDetailAllCoach
	6, // 3: FootMatchDetailAllResponse.formation:type_name -> FootMatchDetailAllFormation
	7, // 4: FootMatchDetailAllResponse.weather:type_name -> FootMatchDetailAllWeather
	8, // 5: FootMatchDetailAllResponse.season_ranking:type_name -> FootMatchDetailAllSeasonRanking
	9, // 6: FootMatchDetailAllResponse.statistics:type_name -> FootMatchDetailAllStatistics
	3, // 7: FootMatchDetailAllScores.scores_list:type_name -> ScoresList
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_match_details_all_proto_init() }
func file_match_details_all_proto_init() {
	if File_match_details_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_details_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllScores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoresList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllStadium); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllCoach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllFormation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllWeather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllSeasonRanking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_details_all_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootMatchDetailAllStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_details_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_details_all_proto_goTypes,
		DependencyIndexes: file_match_details_all_proto_depIdxs,
		MessageInfos:      file_match_details_all_proto_msgTypes,
	}.Build()
	File_match_details_all_proto = out.File
	file_match_details_all_proto_rawDesc = nil
	file_match_details_all_proto_goTypes = nil
	file_match_details_all_proto_depIdxs = nil
}
