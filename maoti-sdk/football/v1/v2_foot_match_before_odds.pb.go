// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: v2_foot_match_before_odds.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type V2FootMatchBeforeImmediateOddsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId int64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"` //比赛ID
	OddType int64 `protobuf:"varint,2,opt,name=oddType,proto3" json:"oddType,omitempty"` //查询指数类型：1.赛前指数；2.即时指数；
}

func (x *V2FootMatchBeforeImmediateOddsRequest) Reset() {
	*x = V2FootMatchBeforeImmediateOddsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_match_before_odds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2FootMatchBeforeImmediateOddsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2FootMatchBeforeImmediateOddsRequest) ProtoMessage() {}

func (x *V2FootMatchBeforeImmediateOddsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_match_before_odds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2FootMatchBeforeImmediateOddsRequest.ProtoReflect.Descriptor instead.
func (*V2FootMatchBeforeImmediateOddsRequest) Descriptor() ([]byte, []int) {
	return file_v2_foot_match_before_odds_proto_rawDescGZIP(), []int{0}
}

func (x *V2FootMatchBeforeImmediateOddsRequest) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *V2FootMatchBeforeImmediateOddsRequest) GetOddType() int64 {
	if x != nil {
		return x.OddType
	}
	return 0
}

type V2FootMatchBeforeImmediateOddsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsianLoss    *V2BeforeImmediateOdds `protobuf:"bytes,1,opt,name=asianLoss,proto3" json:"asianLoss,omitempty"`       //亚赔
	EuropeanLoss *V2BeforeImmediateOdds `protobuf:"bytes,2,opt,name=europeanLoss,proto3" json:"europeanLoss,omitempty"` //欧赔
	BigSmall     *V2BeforeImmediateOdds `protobuf:"bytes,3,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`         //大小球
}

func (x *V2FootMatchBeforeImmediateOddsResponse) Reset() {
	*x = V2FootMatchBeforeImmediateOddsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_match_before_odds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2FootMatchBeforeImmediateOddsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2FootMatchBeforeImmediateOddsResponse) ProtoMessage() {}

func (x *V2FootMatchBeforeImmediateOddsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_match_before_odds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2FootMatchBeforeImmediateOddsResponse.ProtoReflect.Descriptor instead.
func (*V2FootMatchBeforeImmediateOddsResponse) Descriptor() ([]byte, []int) {
	return file_v2_foot_match_before_odds_proto_rawDescGZIP(), []int{1}
}

func (x *V2FootMatchBeforeImmediateOddsResponse) GetAsianLoss() *V2BeforeImmediateOdds {
	if x != nil {
		return x.AsianLoss
	}
	return nil
}

func (x *V2FootMatchBeforeImmediateOddsResponse) GetEuropeanLoss() *V2BeforeImmediateOdds {
	if x != nil {
		return x.EuropeanLoss
	}
	return nil
}

func (x *V2FootMatchBeforeImmediateOddsResponse) GetBigSmall() *V2BeforeImmediateOdds {
	if x != nil {
		return x.BigSmall
	}
	return nil
}

type V2BeforeImmediateOdds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Init []string `protobuf:"bytes,1,rep,name=init,proto3" json:"init,omitempty"`
	Curr []string `protobuf:"bytes,2,rep,name=curr,proto3" json:"curr,omitempty"`
}

func (x *V2BeforeImmediateOdds) Reset() {
	*x = V2BeforeImmediateOdds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_match_before_odds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2BeforeImmediateOdds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2BeforeImmediateOdds) ProtoMessage() {}

func (x *V2BeforeImmediateOdds) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_match_before_odds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2BeforeImmediateOdds.ProtoReflect.Descriptor instead.
func (*V2BeforeImmediateOdds) Descriptor() ([]byte, []int) {
	return file_v2_foot_match_before_odds_proto_rawDescGZIP(), []int{2}
}

func (x *V2BeforeImmediateOdds) GetInit() []string {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *V2BeforeImmediateOdds) GetCurr() []string {
	if x != nil {
		return x.Curr
	}
	return nil
}

var File_v2_foot_match_before_odds_proto protoreflect.FileDescriptor

var file_v2_foot_match_before_odds_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x32, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x64, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5b, 0x0a, 0x25, 0x56, 0x32, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x4f,
	0x64, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xce,
	0x01, 0x0a, 0x26, 0x56, 0x32, 0x46, 0x6f, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x4f, 0x64, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x73, 0x69,
	0x61, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56,
	0x32, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x4f, 0x64, 0x64, 0x73, 0x52, 0x09, 0x61, 0x73, 0x69, 0x61, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x12,
	0x3a, 0x0a, 0x0c, 0x65, 0x75, 0x72, 0x6f, 0x70, 0x65, 0x61, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x32, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x52, 0x0c, 0x65,
	0x75, 0x72, 0x6f, 0x70, 0x65, 0x61, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x62,
	0x69, 0x67, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x56, 0x32, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x4f, 0x64, 0x64, 0x73, 0x52, 0x08, 0x62, 0x69, 0x67, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x22,
	0x3f, 0x0a, 0x15, 0x56, 0x32, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x75, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x75, 0x72, 0x72,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v2_foot_match_before_odds_proto_rawDescOnce sync.Once
	file_v2_foot_match_before_odds_proto_rawDescData = file_v2_foot_match_before_odds_proto_rawDesc
)

func file_v2_foot_match_before_odds_proto_rawDescGZIP() []byte {
	file_v2_foot_match_before_odds_proto_rawDescOnce.Do(func() {
		file_v2_foot_match_before_odds_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_foot_match_before_odds_proto_rawDescData)
	})
	return file_v2_foot_match_before_odds_proto_rawDescData
}

var file_v2_foot_match_before_odds_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v2_foot_match_before_odds_proto_goTypes = []interface{}{
	(*V2FootMatchBeforeImmediateOddsRequest)(nil),  // 0: V2FootMatchBeforeImmediateOddsRequest
	(*V2FootMatchBeforeImmediateOddsResponse)(nil), // 1: V2FootMatchBeforeImmediateOddsResponse
	(*V2BeforeImmediateOdds)(nil),                  // 2: V2BeforeImmediateOdds
}
var file_v2_foot_match_before_odds_proto_depIdxs = []int32{
	2, // 0: V2FootMatchBeforeImmediateOddsResponse.asianLoss:type_name -> V2BeforeImmediateOdds
	2, // 1: V2FootMatchBeforeImmediateOddsResponse.europeanLoss:type_name -> V2BeforeImmediateOdds
	2, // 2: V2FootMatchBeforeImmediateOddsResponse.bigSmall:type_name -> V2BeforeImmediateOdds
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v2_foot_match_before_odds_proto_init() }
func file_v2_foot_match_before_odds_proto_init() {
	if File_v2_foot_match_before_odds_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_foot_match_before_odds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2FootMatchBeforeImmediateOddsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_foot_match_before_odds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2FootMatchBeforeImmediateOddsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_foot_match_before_odds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2BeforeImmediateOdds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_foot_match_before_odds_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v2_foot_match_before_odds_proto_goTypes,
		DependencyIndexes: file_v2_foot_match_before_odds_proto_depIdxs,
		MessageInfos:      file_v2_foot_match_before_odds_proto_msgTypes,
	}.Build()
	File_v2_foot_match_before_odds_proto = out.File
	file_v2_foot_match_before_odds_proto_rawDesc = nil
	file_v2_foot_match_before_odds_proto_goTypes = nil
	file_v2_foot_match_before_odds_proto_depIdxs = nil
}
