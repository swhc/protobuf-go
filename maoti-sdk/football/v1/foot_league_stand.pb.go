// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: foot_league_stand.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//资料库 - 排名（积分榜）
type FootLeagueStandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`  //请求语言  1:zh  2:en
	SportId  string `protobuf:"bytes,1,opt,name=sportId,proto3" json:"sportId,omitempty"`    //1足球 2篮球
	SeasonId int64  `protobuf:"varint,2,opt,name=SeasonId,proto3" json:"SeasonId,omitempty"` //年份对应id
}

func (x *FootLeagueStandRequest) Reset() {
	*x = FootLeagueStandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootLeagueStandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootLeagueStandRequest) ProtoMessage() {}

func (x *FootLeagueStandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootLeagueStandRequest.ProtoReflect.Descriptor instead.
func (*FootLeagueStandRequest) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{0}
}

func (x *FootLeagueStandRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *FootLeagueStandRequest) GetSportId() string {
	if x != nil {
		return x.SportId
	}
	return ""
}

func (x *FootLeagueStandRequest) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type FootLeagueStandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupList         []*FootGroupCompetition `protobuf:"bytes,1,rep,name=GroupList,proto3" json:"GroupList,omitempty"`
	LeagueType        int64                   `protobuf:"varint,3,opt,name=LeagueType,proto3" json:"LeagueType,omitempty"`
	QualificationList []*FootQualification    `protobuf:"bytes,4,rep,name=QualificationList,proto3" json:"QualificationList,omitempty"`
	QualifyingList    []*FootQualifying       `protobuf:"bytes,5,rep,name=QualifyingList,proto3" json:"QualifyingList,omitempty"`
	RuleList          *FootRuleListData       `protobuf:"bytes,6,opt,name=RuleList,proto3" json:"RuleList,omitempty"`
	SortGroupList     []string                `protobuf:"bytes,7,rep,name=SortGroupList,proto3" json:"SortGroupList,omitempty"`
}

func (x *FootLeagueStandResponse) Reset() {
	*x = FootLeagueStandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootLeagueStandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootLeagueStandResponse) ProtoMessage() {}

func (x *FootLeagueStandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootLeagueStandResponse.ProtoReflect.Descriptor instead.
func (*FootLeagueStandResponse) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{1}
}

func (x *FootLeagueStandResponse) GetGroupList() []*FootGroupCompetition {
	if x != nil {
		return x.GroupList
	}
	return nil
}

func (x *FootLeagueStandResponse) GetLeagueType() int64 {
	if x != nil {
		return x.LeagueType
	}
	return 0
}

func (x *FootLeagueStandResponse) GetQualificationList() []*FootQualification {
	if x != nil {
		return x.QualificationList
	}
	return nil
}

func (x *FootLeagueStandResponse) GetQualifyingList() []*FootQualifying {
	if x != nil {
		return x.QualifyingList
	}
	return nil
}

func (x *FootLeagueStandResponse) GetRuleList() *FootRuleListData {
	if x != nil {
		return x.RuleList
	}
	return nil
}

func (x *FootLeagueStandResponse) GetSortGroupList() []string {
	if x != nil {
		return x.SortGroupList
	}
	return nil
}

type FootQualifying struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundName      string                             `protobuf:"bytes,8,opt,name=RoundName,proto3" json:"RoundName,omitempty"` //分组名称
	QualifyingList []*FootQualificationQualifyingList `protobuf:"bytes,9,rep,name=qualifyingList,proto3" json:"qualifyingList,omitempty"`
}

func (x *FootQualifying) Reset() {
	*x = FootQualifying{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQualifying) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQualifying) ProtoMessage() {}

func (x *FootQualifying) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQualifying.ProtoReflect.Descriptor instead.
func (*FootQualifying) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{2}
}

func (x *FootQualifying) GetRoundName() string {
	if x != nil {
		return x.RoundName
	}
	return ""
}

func (x *FootQualifying) GetQualifyingList() []*FootQualificationQualifyingList {
	if x != nil {
		return x.QualifyingList
	}
	return nil
}

type FootQualification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundName         string                             `protobuf:"bytes,10,opt,name=RoundName,proto3" json:"RoundName,omitempty"` //分组名称
	QualificationList []*FootQualificationQualifyingList `protobuf:"bytes,11,rep,name=qualificationList,proto3" json:"qualificationList,omitempty"`
}

func (x *FootQualification) Reset() {
	*x = FootQualification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQualification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQualification) ProtoMessage() {}

func (x *FootQualification) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQualification.ProtoReflect.Descriptor instead.
func (*FootQualification) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{3}
}

func (x *FootQualification) GetRoundName() string {
	if x != nil {
		return x.RoundName
	}
	return ""
}

func (x *FootQualification) GetQualificationList() []*FootQualificationQualifyingList {
	if x != nil {
		return x.QualificationList
	}
	return nil
}

type FootQualificationQualifyingList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTwoRounds       bool              `protobuf:"varint,12,opt,name=IsTwoRounds,proto3" json:"IsTwoRounds,omitempty"`
	FirstEventId      int64             `protobuf:"varint,13,opt,name=FirstEventId,proto3" json:"FirstEventId,omitempty"`
	TwoEventId        int64             `protobuf:"varint,14,opt,name=TwoEventId,proto3" json:"TwoEventId,omitempty"`
	EventStatusResult int64             `protobuf:"varint,15,opt,name=EventStatusResult,proto3" json:"EventStatusResult,omitempty"`
	FirstRounds       *QqFirstTwoRounds `protobuf:"bytes,16,opt,name=FirstRounds,proto3" json:"FirstRounds,omitempty"`
	TwoRounds         *QqFirstTwoRounds `protobuf:"bytes,17,opt,name=TwoRounds,proto3" json:"TwoRounds,omitempty"`
	RadioBroadcast    string            `protobuf:"bytes,18,opt,name=RadioBroadcast,proto3" json:"RadioBroadcast,omitempty"`
}

func (x *FootQualificationQualifyingList) Reset() {
	*x = FootQualificationQualifyingList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQualificationQualifyingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQualificationQualifyingList) ProtoMessage() {}

func (x *FootQualificationQualifyingList) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQualificationQualifyingList.ProtoReflect.Descriptor instead.
func (*FootQualificationQualifyingList) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{4}
}

func (x *FootQualificationQualifyingList) GetIsTwoRounds() bool {
	if x != nil {
		return x.IsTwoRounds
	}
	return false
}

func (x *FootQualificationQualifyingList) GetFirstEventId() int64 {
	if x != nil {
		return x.FirstEventId
	}
	return 0
}

func (x *FootQualificationQualifyingList) GetTwoEventId() int64 {
	if x != nil {
		return x.TwoEventId
	}
	return 0
}

func (x *FootQualificationQualifyingList) GetEventStatusResult() int64 {
	if x != nil {
		return x.EventStatusResult
	}
	return 0
}

func (x *FootQualificationQualifyingList) GetFirstRounds() *QqFirstTwoRounds {
	if x != nil {
		return x.FirstRounds
	}
	return nil
}

func (x *FootQualificationQualifyingList) GetTwoRounds() *QqFirstTwoRounds {
	if x != nil {
		return x.TwoRounds
	}
	return nil
}

func (x *FootQualificationQualifyingList) GetRadioBroadcast() string {
	if x != nil {
		return x.RadioBroadcast
	}
	return ""
}

type QqFirstTwoRounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainTeam *QualificationMainCustTeam `protobuf:"bytes,19,opt,name=MainTeam,proto3" json:"MainTeam,omitempty"`
	CustTeam *QualificationMainCustTeam `protobuf:"bytes,20,opt,name=CustTeam,proto3" json:"CustTeam,omitempty"`
}

func (x *QqFirstTwoRounds) Reset() {
	*x = QqFirstTwoRounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QqFirstTwoRounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QqFirstTwoRounds) ProtoMessage() {}

func (x *QqFirstTwoRounds) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QqFirstTwoRounds.ProtoReflect.Descriptor instead.
func (*QqFirstTwoRounds) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{5}
}

func (x *QqFirstTwoRounds) GetMainTeam() *QualificationMainCustTeam {
	if x != nil {
		return x.MainTeam
	}
	return nil
}

func (x *QqFirstTwoRounds) GetCustTeam() *QualificationMainCustTeam {
	if x != nil {
		return x.CustTeam
	}
	return nil
}

type QualificationMainCustTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamName    string `protobuf:"bytes,21,opt,name=TeamName,proto3" json:"TeamName,omitempty"`
	TeamImage   string `protobuf:"bytes,22,opt,name=TeamImage,proto3" json:"TeamImage,omitempty"`
	StartTime   int64  `protobuf:"varint,23,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Score       int64  `protobuf:"varint,24,opt,name=score,proto3" json:"score,omitempty"`
	PointSphere int64  `protobuf:"varint,25,opt,name=PointSphere,proto3" json:"PointSphere,omitempty"`
}

func (x *QualificationMainCustTeam) Reset() {
	*x = QualificationMainCustTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualificationMainCustTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualificationMainCustTeam) ProtoMessage() {}

func (x *QualificationMainCustTeam) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualificationMainCustTeam.ProtoReflect.Descriptor instead.
func (*QualificationMainCustTeam) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{6}
}

func (x *QualificationMainCustTeam) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *QualificationMainCustTeam) GetTeamImage() string {
	if x != nil {
		return x.TeamImage
	}
	return ""
}

func (x *QualificationMainCustTeam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QualificationMainCustTeam) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *QualificationMainCustTeam) GetPointSphere() int64 {
	if x != nil {
		return x.PointSphere
	}
	return 0
}

type FootGroupCompetition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundName string       `protobuf:"bytes,26,opt,name=RoundName,proto3" json:"RoundName,omitempty"` //分组名称
	GList     []*FootGList `protobuf:"bytes,27,rep,name=GList,proto3" json:"GList,omitempty"`
}

func (x *FootGroupCompetition) Reset() {
	*x = FootGroupCompetition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootGroupCompetition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootGroupCompetition) ProtoMessage() {}

func (x *FootGroupCompetition) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootGroupCompetition.ProtoReflect.Descriptor instead.
func (*FootGroupCompetition) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{7}
}

func (x *FootGroupCompetition) GetRoundName() string {
	if x != nil {
		return x.RoundName
	}
	return ""
}

func (x *FootGroupCompetition) GetGList() []*FootGList {
	if x != nil {
		return x.GList
	}
	return nil
}

type FootGList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,28,opt,name=Id,proto3" json:"Id,omitempty"`                     //id
	TeamName     string `protobuf:"bytes,29,opt,name=TeamName,proto3" json:"TeamName,omitempty"`          //球队名称
	TeamImage    string `protobuf:"bytes,30,opt,name=TeamImage,proto3" json:"TeamImage,omitempty"`        //球队图片
	Gamesplayed  int64  `protobuf:"varint,31,opt,name=Gamesplayed,proto3" json:"Gamesplayed,omitempty"`   //比赛次数
	Win          int64  `protobuf:"varint,32,opt,name=Win,proto3" json:"Win,omitempty"`                   //胜
	Draws        int64  `protobuf:"varint,33,opt,name=Draws,proto3" json:"Draws,omitempty"`               //平
	Losses       int64  `protobuf:"varint,34,opt,name=Losses,proto3" json:"Losses,omitempty"`             //负
	Goalsfor     int64  `protobuf:"varint,35,opt,name=Goalsfor,proto3" json:"Goalsfor,omitempty"`         //进球
	Goalsagainst int64  `protobuf:"varint,36,opt,name=Goalsagainst,proto3" json:"Goalsagainst,omitempty"` //丢球
	Points       int64  `protobuf:"varint,37,opt,name=Points,proto3" json:"Points,omitempty"`             //积分
}

func (x *FootGList) Reset() {
	*x = FootGList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootGList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootGList) ProtoMessage() {}

func (x *FootGList) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootGList.ProtoReflect.Descriptor instead.
func (*FootGList) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{8}
}

func (x *FootGList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FootGList) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *FootGList) GetTeamImage() string {
	if x != nil {
		return x.TeamImage
	}
	return ""
}

func (x *FootGList) GetGamesplayed() int64 {
	if x != nil {
		return x.Gamesplayed
	}
	return 0
}

func (x *FootGList) GetWin() int64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *FootGList) GetDraws() int64 {
	if x != nil {
		return x.Draws
	}
	return 0
}

func (x *FootGList) GetLosses() int64 {
	if x != nil {
		return x.Losses
	}
	return 0
}

func (x *FootGList) GetGoalsfor() int64 {
	if x != nil {
		return x.Goalsfor
	}
	return 0
}

func (x *FootGList) GetGoalsagainst() int64 {
	if x != nil {
		return x.Goalsagainst
	}
	return 0
}

func (x *FootGList) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

type FirstTwoRounds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainTeam          *MainCustTeam `protobuf:"bytes,53,opt,name=MainTeam,proto3" json:"MainTeam,omitempty"`
	CustTeam          *MainCustTeam `protobuf:"bytes,54,opt,name=CustTeam,proto3" json:"CustTeam,omitempty"`
	EventStatusResult int64         `protobuf:"varint,55,opt,name=EventStatusResult,proto3" json:"EventStatusResult,omitempty"`
}

func (x *FirstTwoRounds) Reset() {
	*x = FirstTwoRounds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirstTwoRounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstTwoRounds) ProtoMessage() {}

func (x *FirstTwoRounds) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstTwoRounds.ProtoReflect.Descriptor instead.
func (*FirstTwoRounds) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{9}
}

func (x *FirstTwoRounds) GetMainTeam() *MainCustTeam {
	if x != nil {
		return x.MainTeam
	}
	return nil
}

func (x *FirstTwoRounds) GetCustTeam() *MainCustTeam {
	if x != nil {
		return x.CustTeam
	}
	return nil
}

func (x *FirstTwoRounds) GetEventStatusResult() int64 {
	if x != nil {
		return x.EventStatusResult
	}
	return 0
}

type MainCustTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamName          string `protobuf:"bytes,56,opt,name=TeamName,proto3" json:"TeamName,omitempty"`
	TeamId            int64  `protobuf:"varint,57,opt,name=TeamId,proto3" json:"TeamId,omitempty"`
	TeamImage         string `protobuf:"bytes,58,opt,name=TeamImage,proto3" json:"TeamImage,omitempty"`
	StartTime         int64  `protobuf:"varint,59,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Score             int64  `protobuf:"varint,60,opt,name=score,proto3" json:"score,omitempty"`
	IsPromotion       bool   `protobuf:"varint,61,opt,name=IsPromotion,proto3" json:"IsPromotion,omitempty"`
	PointSphere       int64  `protobuf:"varint,62,opt,name=PointSphere,proto3" json:"PointSphere,omitempty"`
	EventStatusResult int64  `protobuf:"varint,1,opt,name=EventStatusResult,proto3" json:"EventStatusResult,omitempty"`
}

func (x *MainCustTeam) Reset() {
	*x = MainCustTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainCustTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainCustTeam) ProtoMessage() {}

func (x *MainCustTeam) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainCustTeam.ProtoReflect.Descriptor instead.
func (*MainCustTeam) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{10}
}

func (x *MainCustTeam) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *MainCustTeam) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *MainCustTeam) GetTeamImage() string {
	if x != nil {
		return x.TeamImage
	}
	return ""
}

func (x *MainCustTeam) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MainCustTeam) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *MainCustTeam) GetIsPromotion() bool {
	if x != nil {
		return x.IsPromotion
	}
	return false
}

func (x *MainCustTeam) GetPointSphere() int64 {
	if x != nil {
		return x.PointSphere
	}
	return 0
}

func (x *MainCustTeam) GetEventStatusResult() int64 {
	if x != nil {
		return x.EventStatusResult
	}
	return 0
}

type FootRuleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     string   `protobuf:"bytes,63,opt,name=Data,proto3" json:"Data,omitempty"`
	RuleList []string `protobuf:"bytes,64,rep,name=ruleList,proto3" json:"ruleList,omitempty"`
}

func (x *FootRuleListData) Reset() {
	*x = FootRuleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_league_stand_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootRuleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootRuleListData) ProtoMessage() {}

func (x *FootRuleListData) ProtoReflect() protoreflect.Message {
	mi := &file_foot_league_stand_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootRuleListData.ProtoReflect.Descriptor instead.
func (*FootRuleListData) Descriptor() ([]byte, []int) {
	return file_foot_league_stand_proto_rawDescGZIP(), []int{11}
}

func (x *FootRuleListData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *FootRuleListData) GetRuleList() []string {
	if x != nil {
		return x.RuleList
	}
	return nil
}

var File_foot_league_stand_proto protoreflect.FileDescriptor

var file_foot_league_stand_proto_rawDesc = []byte{
	0x0a, 0x17, 0x66, 0x6f, 0x6f, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x16, 0x46, 0x6f, 0x6f,
	0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x17, 0x46, 0x6f, 0x6f, 0x74, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e,
	0x67, 0x52, 0x0e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x81, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x11, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xc3, 0x02, 0x0a, 0x1f, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x79, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x54, 0x77,
	0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49,
	0x73, 0x54, 0x77, 0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x77, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x54, 0x77, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x0b,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x51, 0x71, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x77, 0x6f, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x2f, 0x0a, 0x09, 0x54, 0x77, 0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x71, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x77,
	0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x09, 0x54, 0x77, 0x6f, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x61, 0x64, 0x69,
	0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x51,
	0x71, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x77, 0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12,
	0x36, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x4d,
	0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x36, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x75, 0x73,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0xab, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x22, 0x56, 0x0a,
	0x14, 0x46, 0x6f, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x47, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x46, 0x6f, 0x6f, 0x74, 0x47, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x57, 0x69, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x57, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x72, 0x61, 0x77, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x44, 0x72, 0x61, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x66, 0x6f, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x66, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x47,
	0x6f, 0x61, 0x6c, 0x73, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x54, 0x77, 0x6f, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x4d, 0x61,
	0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x4d, 0x61, 0x69,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x75,
	0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x2c, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x86,
	0x02, 0x0a, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x3b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x10, 0x46, 0x6f, 0x6f, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x40, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x07, 0x5a, 0x05, 0x2e,
	0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foot_league_stand_proto_rawDescOnce sync.Once
	file_foot_league_stand_proto_rawDescData = file_foot_league_stand_proto_rawDesc
)

func file_foot_league_stand_proto_rawDescGZIP() []byte {
	file_foot_league_stand_proto_rawDescOnce.Do(func() {
		file_foot_league_stand_proto_rawDescData = protoimpl.X.CompressGZIP(file_foot_league_stand_proto_rawDescData)
	})
	return file_foot_league_stand_proto_rawDescData
}

var file_foot_league_stand_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_foot_league_stand_proto_goTypes = []interface{}{
	(*FootLeagueStandRequest)(nil),          // 0: FootLeagueStandRequest
	(*FootLeagueStandResponse)(nil),         // 1: FootLeagueStandResponse
	(*FootQualifying)(nil),                  // 2: FootQualifying
	(*FootQualification)(nil),               // 3: FootQualification
	(*FootQualificationQualifyingList)(nil), // 4: FootQualificationQualifyingList
	(*QqFirstTwoRounds)(nil),                // 5: QqFirstTwoRounds
	(*QualificationMainCustTeam)(nil),       // 6: QualificationMainCustTeam
	(*FootGroupCompetition)(nil),            // 7: FootGroupCompetition
	(*FootGList)(nil),                       // 8: FootGList
	(*FirstTwoRounds)(nil),                  // 9: FirstTwoRounds
	(*MainCustTeam)(nil),                    // 10: MainCustTeam
	(*FootRuleListData)(nil),                // 11: FootRuleListData
}
var file_foot_league_stand_proto_depIdxs = []int32{
	7,  // 0: FootLeagueStandResponse.GroupList:type_name -> FootGroupCompetition
	3,  // 1: FootLeagueStandResponse.QualificationList:type_name -> FootQualification
	2,  // 2: FootLeagueStandResponse.QualifyingList:type_name -> FootQualifying
	11, // 3: FootLeagueStandResponse.RuleList:type_name -> FootRuleListData
	4,  // 4: FootQualifying.qualifyingList:type_name -> FootQualificationQualifyingList
	4,  // 5: FootQualification.qualificationList:type_name -> FootQualificationQualifyingList
	5,  // 6: FootQualificationQualifyingList.FirstRounds:type_name -> QqFirstTwoRounds
	5,  // 7: FootQualificationQualifyingList.TwoRounds:type_name -> QqFirstTwoRounds
	6,  // 8: QqFirstTwoRounds.MainTeam:type_name -> QualificationMainCustTeam
	6,  // 9: QqFirstTwoRounds.CustTeam:type_name -> QualificationMainCustTeam
	8,  // 10: FootGroupCompetition.GList:type_name -> FootGList
	10, // 11: FirstTwoRounds.MainTeam:type_name -> MainCustTeam
	10, // 12: FirstTwoRounds.CustTeam:type_name -> MainCustTeam
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_foot_league_stand_proto_init() }
func file_foot_league_stand_proto_init() {
	if File_foot_league_stand_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_foot_league_stand_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootLeagueStandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootLeagueStandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQualifying); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQualification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQualificationQualifyingList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QqFirstTwoRounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualificationMainCustTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootGroupCompetition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootGList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirstTwoRounds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainCustTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_league_stand_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootRuleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foot_league_stand_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_foot_league_stand_proto_goTypes,
		DependencyIndexes: file_foot_league_stand_proto_depIdxs,
		MessageInfos:      file_foot_league_stand_proto_msgTypes,
	}.Build()
	File_foot_league_stand_proto = out.File
	file_foot_league_stand_proto_rawDesc = nil
	file_foot_league_stand_proto_goTypes = nil
	file_foot_league_stand_proto_depIdxs = nil
}
