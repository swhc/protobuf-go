// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: v2_foot_team_historical_match.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type V2FootTeamHistoricalMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`  //请求语言
	MatchId  int64  `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`   //比赛ID
	TimeZone int64  `protobuf:"varint,3,opt,name=TimeZone,proto3" json:"TimeZone,omitempty"` //时区
}

func (x *V2FootTeamHistoricalMatchRequest) Reset() {
	*x = V2FootTeamHistoricalMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_team_historical_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2FootTeamHistoricalMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2FootTeamHistoricalMatchRequest) ProtoMessage() {}

func (x *V2FootTeamHistoricalMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_team_historical_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2FootTeamHistoricalMatchRequest.ProtoReflect.Descriptor instead.
func (*V2FootTeamHistoricalMatchRequest) Descriptor() ([]byte, []int) {
	return file_v2_foot_team_historical_match_proto_rawDescGZIP(), []int{0}
}

func (x *V2FootTeamHistoricalMatchRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchRequest) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchRequest) GetTimeZone() int64 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

type V2FootTeamHistoricalMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64                            `protobuf:"varint,1,opt,name=TeamId,proto3" json:"TeamId,omitempty"`
	List   []*V2FootTeamHistoricalMatchInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *V2FootTeamHistoricalMatchResponse) Reset() {
	*x = V2FootTeamHistoricalMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_team_historical_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2FootTeamHistoricalMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2FootTeamHistoricalMatchResponse) ProtoMessage() {}

func (x *V2FootTeamHistoricalMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_team_historical_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2FootTeamHistoricalMatchResponse.ProtoReflect.Descriptor instead.
func (*V2FootTeamHistoricalMatchResponse) Descriptor() ([]byte, []int) {
	return file_v2_foot_team_historical_match_proto_rawDescGZIP(), []int{1}
}

func (x *V2FootTeamHistoricalMatchResponse) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchResponse) GetList() []*V2FootTeamHistoricalMatchInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type V2FootTeamHistoricalMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId        int64  `protobuf:"varint,1,opt,name=TournamentId,proto3" json:"TournamentId,omitempty"`                //联赛ID
	TournamentName      string `protobuf:"bytes,2,opt,name=tournamentName,proto3" json:"tournamentName,omitempty"`             //联赛名称
	EventId             int64  `protobuf:"varint,3,opt,name=eventId,proto3" json:"eventId,omitempty"`                          //比赛ID
	MatchTime           int64  `protobuf:"varint,4,opt,name=matchTime,proto3" json:"matchTime,omitempty"`                      //比赛时间
	HomeId              int64  `protobuf:"varint,5,opt,name=homeId,proto3" json:"homeId,omitempty"`                            //主队ID
	HomeName            string `protobuf:"bytes,6,opt,name=homeName,proto3" json:"homeName,omitempty"`                         //主队名称
	HomeScore           int64  `protobuf:"varint,7,opt,name=homeScore,proto3" json:"homeScore,omitempty"`                      //主队得分
	HomeHalfScore       int64  `protobuf:"varint,8,opt,name=homeHalfScore,proto3" json:"homeHalfScore,omitempty"`              //主队半场得分
	AwayId              int64  `protobuf:"varint,9,opt,name=awayId,proto3" json:"awayId,omitempty"`                            //客队ID
	AwayName            string `protobuf:"bytes,10,opt,name=awayName,proto3" json:"awayName,omitempty"`                        //客队名称
	AwayScore           int64  `protobuf:"varint,11,opt,name=awayScore,proto3" json:"awayScore,omitempty"`                     //客队得分
	AwayHalfScore       int64  `protobuf:"varint,12,opt,name=awayHalfScore,proto3" json:"awayHalfScore,omitempty"`             //客队半场得分
	SameTournament      bool   `protobuf:"varint,13,opt,name=sameTournament,proto3" json:"sameTournament,omitempty"`           //相同联赛
	SameHomeAway        bool   `protobuf:"varint,14,opt,name=sameHomeAway,proto3" json:"sameHomeAway,omitempty"`               //相同主客队
	HandicapTrend       string `protobuf:"bytes,15,opt,name=handicapTrend,proto3" json:"handicapTrend,omitempty"`              //让球走势指数
	HandicapTrendResult int64  `protobuf:"varint,16,opt,name=handicapTrendResult,proto3" json:"handicapTrendResult,omitempty"` //让球走势结果（1：胜|大|赢，2：平|走，3：负|输|小）
	CornerKick          int64  `protobuf:"varint,17,opt,name=cornerKick,proto3" json:"cornerKick,omitempty"`                   //角球
	BallSizeTrend       string `protobuf:"bytes,18,opt,name=ballSizeTrend,proto3" json:"ballSizeTrend,omitempty"`              //大小球走势指数
	BallSizeTrendResult int64  `protobuf:"varint,19,opt,name=ballSizeTrendResult,proto3" json:"ballSizeTrendResult,omitempty"` //大小球走势结果，1.大；2.走；3.小；
	Result              int64  `protobuf:"varint,20,opt,name=result,proto3" json:"result,omitempty"`                           //常规赛胜平负：1.胜；2.平；3.负
}

func (x *V2FootTeamHistoricalMatchInfo) Reset() {
	*x = V2FootTeamHistoricalMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_foot_team_historical_match_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2FootTeamHistoricalMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2FootTeamHistoricalMatchInfo) ProtoMessage() {}

func (x *V2FootTeamHistoricalMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v2_foot_team_historical_match_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2FootTeamHistoricalMatchInfo.ProtoReflect.Descriptor instead.
func (*V2FootTeamHistoricalMatchInfo) Descriptor() ([]byte, []int) {
	return file_v2_foot_team_historical_match_proto_rawDescGZIP(), []int{2}
}

func (x *V2FootTeamHistoricalMatchInfo) GetTournamentId() int64 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetTournamentName() string {
	if x != nil {
		return x.TournamentName
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchInfo) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetHomeId() int64 {
	if x != nil {
		return x.HomeId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetHomeName() string {
	if x != nil {
		return x.HomeName
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchInfo) GetHomeScore() int64 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetHomeHalfScore() int64 {
	if x != nil {
		return x.HomeHalfScore
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetAwayId() int64 {
	if x != nil {
		return x.AwayId
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetAwayName() string {
	if x != nil {
		return x.AwayName
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchInfo) GetAwayScore() int64 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetAwayHalfScore() int64 {
	if x != nil {
		return x.AwayHalfScore
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetSameTournament() bool {
	if x != nil {
		return x.SameTournament
	}
	return false
}

func (x *V2FootTeamHistoricalMatchInfo) GetSameHomeAway() bool {
	if x != nil {
		return x.SameHomeAway
	}
	return false
}

func (x *V2FootTeamHistoricalMatchInfo) GetHandicapTrend() string {
	if x != nil {
		return x.HandicapTrend
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchInfo) GetHandicapTrendResult() int64 {
	if x != nil {
		return x.HandicapTrendResult
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetCornerKick() int64 {
	if x != nil {
		return x.CornerKick
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetBallSizeTrend() string {
	if x != nil {
		return x.BallSizeTrend
	}
	return ""
}

func (x *V2FootTeamHistoricalMatchInfo) GetBallSizeTrendResult() int64 {
	if x != nil {
		return x.BallSizeTrendResult
	}
	return 0
}

func (x *V2FootTeamHistoricalMatchInfo) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_v2_foot_team_historical_match_proto protoreflect.FileDescriptor

var file_v2_foot_team_historical_match_proto_rawDesc = []byte{
	0x0a, 0x23, 0x76, 0x32, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x20, 0x56, 0x32, 0x46, 0x6f, 0x6f, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x6f, 0x0a, 0x21, 0x56,
	0x32, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x56, 0x32, 0x46, 0x6f, 0x6f, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc7, 0x05, 0x0a,
	0x1d, 0x56, 0x32, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x48, 0x61, 0x6c, 0x66,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x6f, 0x6d,
	0x65, 0x48, 0x61, 0x6c, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x77,
	0x61, 0x79, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x77, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x77, 0x61, 0x79, 0x48, 0x61, 0x6c, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x48, 0x61, 0x6c, 0x66, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61,
	0x6d, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x77, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x73, 0x61, 0x6d, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x77, 0x61, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x70, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x70, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x70,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x70, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72,
	0x4b, 0x69, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x6e,
	0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x61, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x62, 0x61, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x62, 0x61, 0x6c, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v2_foot_team_historical_match_proto_rawDescOnce sync.Once
	file_v2_foot_team_historical_match_proto_rawDescData = file_v2_foot_team_historical_match_proto_rawDesc
)

func file_v2_foot_team_historical_match_proto_rawDescGZIP() []byte {
	file_v2_foot_team_historical_match_proto_rawDescOnce.Do(func() {
		file_v2_foot_team_historical_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_foot_team_historical_match_proto_rawDescData)
	})
	return file_v2_foot_team_historical_match_proto_rawDescData
}

var file_v2_foot_team_historical_match_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v2_foot_team_historical_match_proto_goTypes = []interface{}{
	(*V2FootTeamHistoricalMatchRequest)(nil),  // 0: V2FootTeamHistoricalMatchRequest
	(*V2FootTeamHistoricalMatchResponse)(nil), // 1: V2FootTeamHistoricalMatchResponse
	(*V2FootTeamHistoricalMatchInfo)(nil),     // 2: V2FootTeamHistoricalMatchInfo
}
var file_v2_foot_team_historical_match_proto_depIdxs = []int32{
	2, // 0: V2FootTeamHistoricalMatchResponse.list:type_name -> V2FootTeamHistoricalMatchInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v2_foot_team_historical_match_proto_init() }
func file_v2_foot_team_historical_match_proto_init() {
	if File_v2_foot_team_historical_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_foot_team_historical_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2FootTeamHistoricalMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_foot_team_historical_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2FootTeamHistoricalMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_foot_team_historical_match_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2FootTeamHistoricalMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_foot_team_historical_match_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v2_foot_team_historical_match_proto_goTypes,
		DependencyIndexes: file_v2_foot_team_historical_match_proto_depIdxs,
		MessageInfos:      file_v2_foot_team_historical_match_proto_msgTypes,
	}.Build()
	File_v2_foot_team_historical_match_proto = out.File
	file_v2_foot_team_historical_match_proto_rawDesc = nil
	file_v2_foot_team_historical_match_proto_goTypes = nil
	file_v2_foot_team_historical_match_proto_depIdxs = nil
}
