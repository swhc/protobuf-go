// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: get_question_matchs.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//问卷调查获取比赛信息
type FootQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sport int32 `protobuf:"varint,1,opt,name=Sport,proto3" json:"Sport,omitempty"`
	Model int32 `protobuf:"varint,2,opt,name=Model,proto3" json:"Model,omitempty"` //1. 进行中+离开始时间5分钟内   2 离开始时间5分钟内  3 当前时间 前后六个小时的比赛
}

func (x *FootQuestionRequest) Reset() {
	*x = FootQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_get_question_matchs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQuestionRequest) ProtoMessage() {}

func (x *FootQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_get_question_matchs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQuestionRequest.ProtoReflect.Descriptor instead.
func (*FootQuestionRequest) Descriptor() ([]byte, []int) {
	return file_get_question_matchs_proto_rawDescGZIP(), []int{0}
}

func (x *FootQuestionRequest) GetSport() int32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *FootQuestionRequest) GetModel() int32 {
	if x != nil {
		return x.Model
	}
	return 0
}

type FootQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sport     int32                    `protobuf:"varint,1,opt,name=Sport,proto3" json:"Sport,omitempty"`
	Model     int32                    `protobuf:"varint,2,opt,name=Model,proto3" json:"Model,omitempty"`
	MatchList []*FootQuestionMatchList `protobuf:"bytes,3,rep,name=matchList,proto3" json:"matchList,omitempty"`
}

func (x *FootQuestionResponse) Reset() {
	*x = FootQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_get_question_matchs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQuestionResponse) ProtoMessage() {}

func (x *FootQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_get_question_matchs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQuestionResponse.ProtoReflect.Descriptor instead.
func (*FootQuestionResponse) Descriptor() ([]byte, []int) {
	return file_get_question_matchs_proto_rawDescGZIP(), []int{1}
}

func (x *FootQuestionResponse) GetSport() int32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *FootQuestionResponse) GetModel() int32 {
	if x != nil {
		return x.Model
	}
	return 0
}

func (x *FootQuestionResponse) GetMatchList() []*FootQuestionMatchList {
	if x != nil {
		return x.MatchList
	}
	return nil
}

type FootQuestionMatchList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sport          int32  `protobuf:"varint,1,opt,name=Sport,proto3" json:"Sport,omitempty"`
	MatchID        int32  `protobuf:"varint,2,opt,name=MatchID,proto3" json:"MatchID,omitempty"`
	MatchTime      int32  `protobuf:"varint,3,opt,name=MatchTime,proto3" json:"MatchTime,omitempty"`
	GameTime       int32  `protobuf:"varint,4,opt,name=GameTime,proto3" json:"GameTime,omitempty"`
	HomeID         int32  `protobuf:"varint,12,opt,name=HomeID,proto3" json:"HomeID,omitempty"`
	AwayID         int32  `protobuf:"varint,13,opt,name=AwayID,proto3" json:"AwayID,omitempty"`
	MatchStatus    int32  `protobuf:"varint,5,opt,name=MatchStatus,proto3" json:"MatchStatus,omitempty"`
	MatchResult    int32  `protobuf:"varint,6,opt,name=MatchResult,proto3" json:"MatchResult,omitempty"`
	HomeSource     int32  `protobuf:"varint,7,opt,name=HomeSource,proto3" json:"HomeSource,omitempty"`
	AwaySource     int32  `protobuf:"varint,8,opt,name=AwaySource,proto3" json:"AwaySource,omitempty"`
	HasOdd         bool   `protobuf:"varint,9,opt,name=hasOdd,proto3" json:"hasOdd,omitempty"`
	TournamentID   int32  `protobuf:"varint,10,opt,name=TournamentID,proto3" json:"TournamentID,omitempty"`
	TournamentName string `protobuf:"bytes,11,opt,name=TournamentName,proto3" json:"TournamentName,omitempty"`
}

func (x *FootQuestionMatchList) Reset() {
	*x = FootQuestionMatchList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_get_question_matchs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootQuestionMatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootQuestionMatchList) ProtoMessage() {}

func (x *FootQuestionMatchList) ProtoReflect() protoreflect.Message {
	mi := &file_get_question_matchs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootQuestionMatchList.ProtoReflect.Descriptor instead.
func (*FootQuestionMatchList) Descriptor() ([]byte, []int) {
	return file_get_question_matchs_proto_rawDescGZIP(), []int{2}
}

func (x *FootQuestionMatchList) GetSport() int32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *FootQuestionMatchList) GetMatchID() int32 {
	if x != nil {
		return x.MatchID
	}
	return 0
}

func (x *FootQuestionMatchList) GetMatchTime() int32 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *FootQuestionMatchList) GetGameTime() int32 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *FootQuestionMatchList) GetHomeID() int32 {
	if x != nil {
		return x.HomeID
	}
	return 0
}

func (x *FootQuestionMatchList) GetAwayID() int32 {
	if x != nil {
		return x.AwayID
	}
	return 0
}

func (x *FootQuestionMatchList) GetMatchStatus() int32 {
	if x != nil {
		return x.MatchStatus
	}
	return 0
}

func (x *FootQuestionMatchList) GetMatchResult() int32 {
	if x != nil {
		return x.MatchResult
	}
	return 0
}

func (x *FootQuestionMatchList) GetHomeSource() int32 {
	if x != nil {
		return x.HomeSource
	}
	return 0
}

func (x *FootQuestionMatchList) GetAwaySource() int32 {
	if x != nil {
		return x.AwaySource
	}
	return 0
}

func (x *FootQuestionMatchList) GetHasOdd() bool {
	if x != nil {
		return x.HasOdd
	}
	return false
}

func (x *FootQuestionMatchList) GetTournamentID() int32 {
	if x != nil {
		return x.TournamentID
	}
	return 0
}

func (x *FootQuestionMatchList) GetTournamentName() string {
	if x != nil {
		return x.TournamentName
	}
	return ""
}

var File_get_question_matchs_proto protoreflect.FileDescriptor

var file_get_question_matchs_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x13, 0x46,
	0x6f, 0x6f, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x78,
	0x0a, 0x14, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x03, 0x0a, 0x15, 0x46, 0x6f, 0x6f,
	0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x6f, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x6f,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x77, 0x61, 0x79, 0x49, 0x44, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x77, 0x61, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x77, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x41, 0x77, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x4f, 0x64, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x4f, 0x64, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_get_question_matchs_proto_rawDescOnce sync.Once
	file_get_question_matchs_proto_rawDescData = file_get_question_matchs_proto_rawDesc
)

func file_get_question_matchs_proto_rawDescGZIP() []byte {
	file_get_question_matchs_proto_rawDescOnce.Do(func() {
		file_get_question_matchs_proto_rawDescData = protoimpl.X.CompressGZIP(file_get_question_matchs_proto_rawDescData)
	})
	return file_get_question_matchs_proto_rawDescData
}

var file_get_question_matchs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_get_question_matchs_proto_goTypes = []interface{}{
	(*FootQuestionRequest)(nil),   // 0: FootQuestionRequest
	(*FootQuestionResponse)(nil),  // 1: FootQuestionResponse
	(*FootQuestionMatchList)(nil), // 2: FootQuestionMatchList
}
var file_get_question_matchs_proto_depIdxs = []int32{
	2, // 0: FootQuestionResponse.matchList:type_name -> FootQuestionMatchList
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_get_question_matchs_proto_init() }
func file_get_question_matchs_proto_init() {
	if File_get_question_matchs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_get_question_matchs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_get_question_matchs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_get_question_matchs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootQuestionMatchList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_get_question_matchs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_get_question_matchs_proto_goTypes,
		DependencyIndexes: file_get_question_matchs_proto_depIdxs,
		MessageInfos:      file_get_question_matchs_proto_msgTypes,
	}.Build()
	File_get_question_matchs_proto = out.File
	file_get_question_matchs_proto_rawDesc = nil
	file_get_question_matchs_proto_goTypes = nil
	file_get_question_matchs_proto_depIdxs = nil
}
