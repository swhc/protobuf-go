// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: foot_base_data.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//指数-列表
type FootBaseDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SportId string `protobuf:"bytes,1,opt,name=sportId,proto3" json:"sportId,omitempty"`  //1足球 2篮球
	EventId int64  `protobuf:"varint,2,opt,name=eventId,proto3" json:"eventId,omitempty"` //比赛id
}

func (x *FootBaseDataRequest) Reset() {
	*x = FootBaseDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootBaseDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootBaseDataRequest) ProtoMessage() {}

func (x *FootBaseDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootBaseDataRequest.ProtoReflect.Descriptor instead.
func (*FootBaseDataRequest) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{0}
}

func (x *FootBaseDataRequest) GetSportId() string {
	if x != nil {
		return x.SportId
	}
	return ""
}

func (x *FootBaseDataRequest) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

type FootBaseDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseList    string          `protobuf:"bytes,1,opt,name=BaseList,proto3" json:"BaseList,omitempty"`
	Historical  *FootHistorical `protobuf:"bytes,2,opt,name=historical,proto3" json:"historical,omitempty"`
	Future      *FootFuture     `protobuf:"bytes,3,opt,name=future,proto3" json:"future,omitempty"`
	Opponent    *FootOpponent   `protobuf:"bytes,4,opt,name=opponent,proto3" json:"opponent,omitempty"`
	RecentChart string          `protobuf:"bytes,5,opt,name=recentChart,proto3" json:"recentChart,omitempty"`
	SameChart   string          `protobuf:"bytes,6,opt,name=sameChart,proto3" json:"sameChart,omitempty"`
}

func (x *FootBaseDataResponse) Reset() {
	*x = FootBaseDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootBaseDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootBaseDataResponse) ProtoMessage() {}

func (x *FootBaseDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootBaseDataResponse.ProtoReflect.Descriptor instead.
func (*FootBaseDataResponse) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{1}
}

func (x *FootBaseDataResponse) GetBaseList() string {
	if x != nil {
		return x.BaseList
	}
	return ""
}

func (x *FootBaseDataResponse) GetHistorical() *FootHistorical {
	if x != nil {
		return x.Historical
	}
	return nil
}

func (x *FootBaseDataResponse) GetFuture() *FootFuture {
	if x != nil {
		return x.Future
	}
	return nil
}

func (x *FootBaseDataResponse) GetOpponent() *FootOpponent {
	if x != nil {
		return x.Opponent
	}
	return nil
}

func (x *FootBaseDataResponse) GetRecentChart() string {
	if x != nil {
		return x.RecentChart
	}
	return ""
}

func (x *FootBaseDataResponse) GetSameChart() string {
	if x != nil {
		return x.SameChart
	}
	return ""
}

type FootHistorical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List *FootBaseList `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *FootHistorical) Reset() {
	*x = FootHistorical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootHistorical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootHistorical) ProtoMessage() {}

func (x *FootHistorical) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootHistorical.ProtoReflect.Descriptor instead.
func (*FootHistorical) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{2}
}

func (x *FootHistorical) GetList() *FootBaseList {
	if x != nil {
		return x.List
	}
	return nil
}

type FootBaseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId        int64  `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	HistoricalDate int64  `protobuf:"varint,2,opt,name=historicalDate,proto3" json:"historicalDate,omitempty"`
	MatchName      string `protobuf:"bytes,3,opt,name=matchName,proto3" json:"matchName,omitempty"`
	TeamMainId     int64  `protobuf:"varint,4,opt,name=teamMainId,proto3" json:"teamMainId,omitempty"`
	MainTeamName   string `protobuf:"bytes,5,opt,name=mainTeamName,proto3" json:"mainTeamName,omitempty"`
	Achievement    string `protobuf:"bytes,6,opt,name=achievement,proto3" json:"achievement,omitempty"`
	HalfCourtScore string `protobuf:"bytes,7,opt,name=halfCourtScore,proto3" json:"halfCourtScore,omitempty"`
	TeamCustId     int64  `protobuf:"varint,8,opt,name=teamCustId,proto3" json:"teamCustId,omitempty"`
	CustTeamName   string `protobuf:"bytes,9,opt,name=custTeamName,proto3" json:"custTeamName,omitempty"`
	Outcome        string `protobuf:"bytes,10,opt,name=outcome,proto3" json:"outcome,omitempty"`
	SameEvent      bool   `protobuf:"varint,11,opt,name=sameEvent,proto3" json:"sameEvent,omitempty"`
	SameHomeCourt  bool   `protobuf:"varint,12,opt,name=sameHomeCourt,proto3" json:"sameHomeCourt,omitempty"`
	Trend          string `protobuf:"bytes,13,opt,name=trend,proto3" json:"trend,omitempty"`
	TrendStr       string `protobuf:"bytes,14,opt,name=trendStr,proto3" json:"trendStr,omitempty"`
	TrendNum       int64  `protobuf:"varint,15,opt,name=trendNum,proto3" json:"trendNum,omitempty"`
	Goal           string `protobuf:"bytes,16,opt,name=goal,proto3" json:"goal,omitempty"`
	GoalStr        string `protobuf:"bytes,17,opt,name=goalStr,proto3" json:"goalStr,omitempty"`
	GoalNum        int64  `protobuf:"varint,18,opt,name=goalNum,proto3" json:"goalNum,omitempty"`
	CornerKick     int64  `protobuf:"varint,19,opt,name=cornerKick,proto3" json:"cornerKick,omitempty"`
	MarkType       int64  `protobuf:"varint,20,opt,name=markType,proto3" json:"markType,omitempty"`
	IsMainTeam     bool   `protobuf:"varint,21,opt,name=isMainTeam,proto3" json:"isMainTeam,omitempty"`
}

func (x *FootBaseList) Reset() {
	*x = FootBaseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootBaseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootBaseList) ProtoMessage() {}

func (x *FootBaseList) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootBaseList.ProtoReflect.Descriptor instead.
func (*FootBaseList) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{3}
}

func (x *FootBaseList) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *FootBaseList) GetHistoricalDate() int64 {
	if x != nil {
		return x.HistoricalDate
	}
	return 0
}

func (x *FootBaseList) GetMatchName() string {
	if x != nil {
		return x.MatchName
	}
	return ""
}

func (x *FootBaseList) GetTeamMainId() int64 {
	if x != nil {
		return x.TeamMainId
	}
	return 0
}

func (x *FootBaseList) GetMainTeamName() string {
	if x != nil {
		return x.MainTeamName
	}
	return ""
}

func (x *FootBaseList) GetAchievement() string {
	if x != nil {
		return x.Achievement
	}
	return ""
}

func (x *FootBaseList) GetHalfCourtScore() string {
	if x != nil {
		return x.HalfCourtScore
	}
	return ""
}

func (x *FootBaseList) GetTeamCustId() int64 {
	if x != nil {
		return x.TeamCustId
	}
	return 0
}

func (x *FootBaseList) GetCustTeamName() string {
	if x != nil {
		return x.CustTeamName
	}
	return ""
}

func (x *FootBaseList) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *FootBaseList) GetSameEvent() bool {
	if x != nil {
		return x.SameEvent
	}
	return false
}

func (x *FootBaseList) GetSameHomeCourt() bool {
	if x != nil {
		return x.SameHomeCourt
	}
	return false
}

func (x *FootBaseList) GetTrend() string {
	if x != nil {
		return x.Trend
	}
	return ""
}

func (x *FootBaseList) GetTrendStr() string {
	if x != nil {
		return x.TrendStr
	}
	return ""
}

func (x *FootBaseList) GetTrendNum() int64 {
	if x != nil {
		return x.TrendNum
	}
	return 0
}

func (x *FootBaseList) GetGoal() string {
	if x != nil {
		return x.Goal
	}
	return ""
}

func (x *FootBaseList) GetGoalStr() string {
	if x != nil {
		return x.GoalStr
	}
	return ""
}

func (x *FootBaseList) GetGoalNum() int64 {
	if x != nil {
		return x.GoalNum
	}
	return 0
}

func (x *FootBaseList) GetCornerKick() int64 {
	if x != nil {
		return x.CornerKick
	}
	return 0
}

func (x *FootBaseList) GetMarkType() int64 {
	if x != nil {
		return x.MarkType
	}
	return 0
}

func (x *FootBaseList) GetIsMainTeam() bool {
	if x != nil {
		return x.IsMainTeam
	}
	return false
}

type FootFuture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main *FootBaseMatchList `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Cust *FootBaseMatchList `protobuf:"bytes,2,opt,name=cust,proto3" json:"cust,omitempty"`
}

func (x *FootFuture) Reset() {
	*x = FootFuture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootFuture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootFuture) ProtoMessage() {}

func (x *FootFuture) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootFuture.ProtoReflect.Descriptor instead.
func (*FootFuture) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{4}
}

func (x *FootFuture) GetMain() *FootBaseMatchList {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *FootFuture) GetCust() *FootBaseMatchList {
	if x != nil {
		return x.Cust
	}
	return nil
}

type FootBaseMatchList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId        int64 `protobuf:"varint,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	HistoricalDate int64 `protobuf:"varint,2,opt,name=historicalDate,proto3" json:"historicalDate,omitempty"`
	MatchName      int64 `protobuf:"varint,3,opt,name=matchName,proto3" json:"matchName,omitempty"`
	MainTeamName   int64 `protobuf:"varint,4,opt,name=mainTeamName,proto3" json:"mainTeamName,omitempty"`
	Achievement    int64 `protobuf:"varint,5,opt,name=achievement,proto3" json:"achievement,omitempty"`
	CustTeamName   int64 `protobuf:"varint,6,opt,name=custTeamName,proto3" json:"custTeamName,omitempty"`
	Trend          int64 `protobuf:"varint,7,opt,name=trend,proto3" json:"trend,omitempty"`
	Spacing        int64 `protobuf:"varint,8,opt,name=spacing,proto3" json:"spacing,omitempty"`
}

func (x *FootBaseMatchList) Reset() {
	*x = FootBaseMatchList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootBaseMatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootBaseMatchList) ProtoMessage() {}

func (x *FootBaseMatchList) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootBaseMatchList.ProtoReflect.Descriptor instead.
func (*FootBaseMatchList) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{5}
}

func (x *FootBaseMatchList) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *FootBaseMatchList) GetHistoricalDate() int64 {
	if x != nil {
		return x.HistoricalDate
	}
	return 0
}

func (x *FootBaseMatchList) GetMatchName() int64 {
	if x != nil {
		return x.MatchName
	}
	return 0
}

func (x *FootBaseMatchList) GetMainTeamName() int64 {
	if x != nil {
		return x.MainTeamName
	}
	return 0
}

func (x *FootBaseMatchList) GetAchievement() int64 {
	if x != nil {
		return x.Achievement
	}
	return 0
}

func (x *FootBaseMatchList) GetCustTeamName() int64 {
	if x != nil {
		return x.CustTeamName
	}
	return 0
}

func (x *FootBaseMatchList) GetTrend() int64 {
	if x != nil {
		return x.Trend
	}
	return 0
}

func (x *FootBaseMatchList) GetSpacing() int64 {
	if x != nil {
		return x.Spacing
	}
	return 0
}

type FootOpponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main *FootOpponentList `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Cust *FootOpponentList `protobuf:"bytes,2,opt,name=cust,proto3" json:"cust,omitempty"`
}

func (x *FootOpponent) Reset() {
	*x = FootOpponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootOpponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootOpponent) ProtoMessage() {}

func (x *FootOpponent) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootOpponent.ProtoReflect.Descriptor instead.
func (*FootOpponent) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{6}
}

func (x *FootOpponent) GetMain() *FootOpponentList {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *FootOpponent) GetCust() *FootOpponentList {
	if x != nil {
		return x.Cust
	}
	return nil
}

type FootOpponentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       int64         `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	FlatNumber  int64         `protobuf:"varint,2,opt,name=flatNumber,proto3" json:"flatNumber,omitempty"`
	MinusNumber int64         `protobuf:"varint,3,opt,name=minusNumber,proto3" json:"minusNumber,omitempty"`
	TeamId      int64         `protobuf:"varint,4,opt,name=teamId,proto3" json:"teamId,omitempty"`
	TeamImages  string        `protobuf:"bytes,5,opt,name=teamImages,proto3" json:"teamImages,omitempty"`
	TeamName    string        `protobuf:"bytes,6,opt,name=teamName,proto3" json:"teamName,omitempty"`
	WinNumber   int64         `protobuf:"varint,7,opt,name=winNumber,proto3" json:"winNumber,omitempty"`
	List        *FootBaseList `protobuf:"bytes,8,opt,name=list,proto3" json:"list,omitempty"`
}

func (x *FootOpponentList) Reset() {
	*x = FootOpponentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foot_base_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FootOpponentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FootOpponentList) ProtoMessage() {}

func (x *FootOpponentList) ProtoReflect() protoreflect.Message {
	mi := &file_foot_base_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FootOpponentList.ProtoReflect.Descriptor instead.
func (*FootOpponentList) Descriptor() ([]byte, []int) {
	return file_foot_base_data_proto_rawDescGZIP(), []int{7}
}

func (x *FootOpponentList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FootOpponentList) GetFlatNumber() int64 {
	if x != nil {
		return x.FlatNumber
	}
	return 0
}

func (x *FootOpponentList) GetMinusNumber() int64 {
	if x != nil {
		return x.MinusNumber
	}
	return 0
}

func (x *FootOpponentList) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *FootOpponentList) GetTeamImages() string {
	if x != nil {
		return x.TeamImages
	}
	return ""
}

func (x *FootOpponentList) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *FootOpponentList) GetWinNumber() int64 {
	if x != nil {
		return x.WinNumber
	}
	return 0
}

func (x *FootOpponentList) GetList() *FootBaseList {
	if x != nil {
		return x.List
	}
	return nil
}

var File_foot_base_data_proto protoreflect.FileDescriptor

var file_foot_base_data_proto_rawDesc = []byte{
	0x0a, 0x14, 0x66, 0x6f, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x13, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xf3, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x46, 0x6f, 0x6f,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x0a, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x46, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x06, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x08,
	0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6f,
	0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x61, 0x6d,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x61,
	0x6d, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x22, 0x33, 0x0a, 0x0e, 0x46, 0x6f, 0x6f, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x05, 0x0a,
	0x0c, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x6c, 0x66, 0x43, 0x6f, 0x75, 0x72, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x61, 0x6c,
	0x66, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x61, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x75, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x61, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x73, 0x61, 0x6d, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x6f, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x6f, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4b, 0x69, 0x63,
	0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x4b,
	0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0x5c, 0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x74, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x6f,
	0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x75, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x63, 0x75, 0x73, 0x74, 0x22, 0x8d, 0x02,
	0x0a, 0x11, 0x46, 0x6f, 0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x22, 0x5c, 0x0a,
	0x0c, 0x46, 0x6f, 0x6f, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x6f,
	0x6f, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x75, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x63, 0x75, 0x73, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x10,
	0x46, 0x6f, 0x6f, 0x74, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x75, 0x73, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x75, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x77, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_foot_base_data_proto_rawDescOnce sync.Once
	file_foot_base_data_proto_rawDescData = file_foot_base_data_proto_rawDesc
)

func file_foot_base_data_proto_rawDescGZIP() []byte {
	file_foot_base_data_proto_rawDescOnce.Do(func() {
		file_foot_base_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_foot_base_data_proto_rawDescData)
	})
	return file_foot_base_data_proto_rawDescData
}

var file_foot_base_data_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_foot_base_data_proto_goTypes = []interface{}{
	(*FootBaseDataRequest)(nil),  // 0: FootBaseDataRequest
	(*FootBaseDataResponse)(nil), // 1: FootBaseDataResponse
	(*FootHistorical)(nil),       // 2: FootHistorical
	(*FootBaseList)(nil),         // 3: FootBaseList
	(*FootFuture)(nil),           // 4: FootFuture
	(*FootBaseMatchList)(nil),    // 5: FootBaseMatchList
	(*FootOpponent)(nil),         // 6: FootOpponent
	(*FootOpponentList)(nil),     // 7: FootOpponentList
}
var file_foot_base_data_proto_depIdxs = []int32{
	2, // 0: FootBaseDataResponse.historical:type_name -> FootHistorical
	4, // 1: FootBaseDataResponse.future:type_name -> FootFuture
	6, // 2: FootBaseDataResponse.opponent:type_name -> FootOpponent
	3, // 3: FootHistorical.list:type_name -> FootBaseList
	5, // 4: FootFuture.main:type_name -> FootBaseMatchList
	5, // 5: FootFuture.cust:type_name -> FootBaseMatchList
	7, // 6: FootOpponent.main:type_name -> FootOpponentList
	7, // 7: FootOpponent.cust:type_name -> FootOpponentList
	3, // 8: FootOpponentList.list:type_name -> FootBaseList
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_foot_base_data_proto_init() }
func file_foot_base_data_proto_init() {
	if File_foot_base_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_foot_base_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootBaseDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootBaseDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootHistorical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootBaseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootFuture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootBaseMatchList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootOpponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foot_base_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FootOpponentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foot_base_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_foot_base_data_proto_goTypes,
		DependencyIndexes: file_foot_base_data_proto_depIdxs,
		MessageInfos:      file_foot_base_data_proto_msgTypes,
	}.Build()
	File_foot_base_data_proto = out.File
	file_foot_base_data_proto_rawDesc = nil
	file_foot_base_data_proto_goTypes = nil
	file_foot_base_data_proto_depIdxs = nil
}
