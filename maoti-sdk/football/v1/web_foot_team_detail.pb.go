// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: web_foot_team_detail.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//球队详情
type WebFootTeamDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"` //请求语言
	TeamId   int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`    //球队ID
}

func (x *WebFootTeamDetailRequest) Reset() {
	*x = WebFootTeamDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamDetailRequest) ProtoMessage() {}

func (x *WebFootTeamDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamDetailRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamDetailRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{0}
}

func (x *WebFootTeamDetailRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamDetailRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type WebFootTeamDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId          int64  `protobuf:"varint,1,opt,name=teamId,proto3" json:"teamId,omitempty"`
	TeamImage       string `protobuf:"bytes,3,opt,name=teamImage,proto3" json:"teamImage,omitempty"`
	TeamName        string `protobuf:"bytes,4,opt,name=teamName,proto3" json:"teamName,omitempty"`
	CountryName     string `protobuf:"bytes,9,opt,name=countryName,proto3" json:"countryName,omitempty"`
	CountryCity     string `protobuf:"bytes,10,opt,name=countryCity,proto3" json:"countryCity,omitempty"`
	EstablishedTime string `protobuf:"bytes,11,opt,name=EstablishedTime,proto3" json:"EstablishedTime,omitempty"`
	HomeCourt       string `protobuf:"bytes,12,opt,name=HomeCourt,proto3" json:"HomeCourt,omitempty"`
	HomeCourtSize   string `protobuf:"bytes,13,opt,name=HomeCourtSize,proto3" json:"HomeCourtSize,omitempty"`
}

func (x *WebFootTeamDetailResponse) Reset() {
	*x = WebFootTeamDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamDetailResponse) ProtoMessage() {}

func (x *WebFootTeamDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamDetailResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamDetailResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{1}
}

func (x *WebFootTeamDetailResponse) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *WebFootTeamDetailResponse) GetTeamImage() string {
	if x != nil {
		return x.TeamImage
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetCountryCity() string {
	if x != nil {
		return x.CountryCity
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetEstablishedTime() string {
	if x != nil {
		return x.EstablishedTime
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetHomeCourt() string {
	if x != nil {
		return x.HomeCourt
	}
	return ""
}

func (x *WebFootTeamDetailResponse) GetHomeCourtSize() string {
	if x != nil {
		return x.HomeCourtSize
	}
	return ""
}

//球队详情 - 获取球队下的比赛数据
type WebFootTeamMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language  string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`   //请求语言
	TeamId    int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`      //球队ID
	MatchTime string `protobuf:"bytes,6,opt,name=matchTime,proto3" json:"matchTime,omitempty"` //比赛时间
	Page      int64  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64  `protobuf:"varint,8,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *WebFootTeamMatchRequest) Reset() {
	*x = WebFootTeamMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamMatchRequest) ProtoMessage() {}

func (x *WebFootTeamMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamMatchRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamMatchRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{2}
}

func (x *WebFootTeamMatchRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamMatchRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *WebFootTeamMatchRequest) GetMatchTime() string {
	if x != nil {
		return x.MatchTime
	}
	return ""
}

func (x *WebFootTeamMatchRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *WebFootTeamMatchRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type WebFootTeamMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchData []*WebFootTeamMatch `protobuf:"bytes,21,rep,name=matchData,proto3" json:"matchData,omitempty"` //赛程
}

func (x *WebFootTeamMatchResponse) Reset() {
	*x = WebFootTeamMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamMatchResponse) ProtoMessage() {}

func (x *WebFootTeamMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamMatchResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamMatchResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{3}
}

func (x *WebFootTeamMatchResponse) GetMatchData() []*WebFootTeamMatch {
	if x != nil {
		return x.MatchData
	}
	return nil
}

type WebFootTeamMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchTime      string `protobuf:"bytes,6,opt,name=matchTime,proto3" json:"matchTime,omitempty"`           //比赛时间
	TournamentName string `protobuf:"bytes,5,opt,name=TournamentName,proto3" json:"TournamentName,omitempty"` //联赛名称
	HomeTeam       string `protobuf:"bytes,7,opt,name=homeTeam,proto3" json:"homeTeam,omitempty"`             //主队
	HomeTeamImage  string `protobuf:"bytes,8,opt,name=homeTeamImage,proto3" json:"homeTeamImage,omitempty"`   //主队logo
	HomeScore      int64  `protobuf:"varint,9,opt,name=homeScore,proto3" json:"homeScore,omitempty"`          //主队比分
	AwayTeam       string `protobuf:"bytes,10,opt,name=awayTeam,proto3" json:"awayTeam,omitempty"`            //客队
	AwayTeamImage  string `protobuf:"bytes,11,opt,name=awayTeamImage,proto3" json:"awayTeamImage,omitempty"`  //客队logo
	AwayScore      int64  `protobuf:"varint,12,opt,name=awayScore,proto3" json:"awayScore,omitempty"`         //客队比分
	HalfScore      string `protobuf:"bytes,13,opt,name=halfScore,proto3" json:"halfScore,omitempty"`          //主队-客队（半场比分）
	MatchResult    string `protobuf:"bytes,14,opt,name=MatchResult,proto3" json:"MatchResult,omitempty"`      //胜平负
}

func (x *WebFootTeamMatch) Reset() {
	*x = WebFootTeamMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamMatch) ProtoMessage() {}

func (x *WebFootTeamMatch) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamMatch.ProtoReflect.Descriptor instead.
func (*WebFootTeamMatch) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{4}
}

func (x *WebFootTeamMatch) GetMatchTime() string {
	if x != nil {
		return x.MatchTime
	}
	return ""
}

func (x *WebFootTeamMatch) GetTournamentName() string {
	if x != nil {
		return x.TournamentName
	}
	return ""
}

func (x *WebFootTeamMatch) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *WebFootTeamMatch) GetHomeTeamImage() string {
	if x != nil {
		return x.HomeTeamImage
	}
	return ""
}

func (x *WebFootTeamMatch) GetHomeScore() int64 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *WebFootTeamMatch) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *WebFootTeamMatch) GetAwayTeamImage() string {
	if x != nil {
		return x.AwayTeamImage
	}
	return ""
}

func (x *WebFootTeamMatch) GetAwayScore() int64 {
	if x != nil {
		return x.AwayScore
	}
	return 0
}

func (x *WebFootTeamMatch) GetHalfScore() string {
	if x != nil {
		return x.HalfScore
	}
	return ""
}

func (x *WebFootTeamMatch) GetMatchResult() string {
	if x != nil {
		return x.MatchResult
	}
	return ""
}

//球队详情 - 球队下的球员信息
type WebFootTeamPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`  //请求语言
	TeamId   int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`     //球队ID
	SeasonId int64  `protobuf:"varint,6,opt,name=seasonId,proto3" json:"seasonId,omitempty"` //赛季ID
}

func (x *WebFootTeamPlayerRequest) Reset() {
	*x = WebFootTeamPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamPlayerRequest) ProtoMessage() {}

func (x *WebFootTeamPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamPlayerRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamPlayerRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{5}
}

func (x *WebFootTeamPlayerRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamPlayerRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *WebFootTeamPlayerRequest) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type WebFootTeamPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebBack       []*WebFootTeamPlayerBack `protobuf:"bytes,1,rep,name=webBack,proto3" json:"webBack,omitempty"`             //后卫
	Coach         *WebCoach                `protobuf:"bytes,2,opt,name=coach,proto3" json:"coach,omitempty"`                 //教练
	WebGoalkeeper []*WebFootTeamPlayerBack `protobuf:"bytes,3,rep,name=webGoalkeeper,proto3" json:"webGoalkeeper,omitempty"` //守门员
	WebMidfield   []*WebFootTeamPlayerBack `protobuf:"bytes,4,rep,name=webMidfield,proto3" json:"webMidfield,omitempty"`     //中场
	WebVanguard   []*WebFootTeamPlayerBack `protobuf:"bytes,5,rep,name=webVanguard,proto3" json:"webVanguard,omitempty"`     //前锋
}

func (x *WebFootTeamPlayerResponse) Reset() {
	*x = WebFootTeamPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamPlayerResponse) ProtoMessage() {}

func (x *WebFootTeamPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamPlayerResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamPlayerResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{6}
}

func (x *WebFootTeamPlayerResponse) GetWebBack() []*WebFootTeamPlayerBack {
	if x != nil {
		return x.WebBack
	}
	return nil
}

func (x *WebFootTeamPlayerResponse) GetCoach() *WebCoach {
	if x != nil {
		return x.Coach
	}
	return nil
}

func (x *WebFootTeamPlayerResponse) GetWebGoalkeeper() []*WebFootTeamPlayerBack {
	if x != nil {
		return x.WebGoalkeeper
	}
	return nil
}

func (x *WebFootTeamPlayerResponse) GetWebMidfield() []*WebFootTeamPlayerBack {
	if x != nil {
		return x.WebMidfield
	}
	return nil
}

func (x *WebFootTeamPlayerResponse) GetWebVanguard() []*WebFootTeamPlayerBack {
	if x != nil {
		return x.WebVanguard
	}
	return nil
}

type WebCoach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	PersonName string `protobuf:"bytes,2,opt,name=personName,proto3" json:"personName,omitempty"`
	Country    string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *WebCoach) Reset() {
	*x = WebCoach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebCoach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebCoach) ProtoMessage() {}

func (x *WebCoach) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebCoach.ProtoReflect.Descriptor instead.
func (*WebCoach) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{7}
}

func (x *WebCoach) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *WebCoach) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *WebCoach) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type WebFootTeamPlayerBack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersonId           int64  `protobuf:"varint,1,opt,name=personId,proto3" json:"personId,omitempty"`
	PersonName         string `protobuf:"bytes,2,opt,name=personName,proto3" json:"personName,omitempty"`
	Image              string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Age                int64  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Country            string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	ClothesNum         int64  `protobuf:"varint,4,opt,name=clothesNum,proto3" json:"clothesNum,omitempty"`
	Height             string `protobuf:"bytes,11,opt,name=height,proto3" json:"height,omitempty"`
	Weight             string `protobuf:"bytes,12,opt,name=weight,proto3" json:"weight,omitempty"`
	MarketValue        string `protobuf:"bytes,13,opt,name=MarketValue,proto3" json:"MarketValue,omitempty"`
	ContractExpiryTime string `protobuf:"bytes,14,opt,name=ContractExpiryTime,proto3" json:"ContractExpiryTime,omitempty"`
}

func (x *WebFootTeamPlayerBack) Reset() {
	*x = WebFootTeamPlayerBack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamPlayerBack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamPlayerBack) ProtoMessage() {}

func (x *WebFootTeamPlayerBack) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamPlayerBack.ProtoReflect.Descriptor instead.
func (*WebFootTeamPlayerBack) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{8}
}

func (x *WebFootTeamPlayerBack) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *WebFootTeamPlayerBack) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *WebFootTeamPlayerBack) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetClothesNum() int64 {
	if x != nil {
		return x.ClothesNum
	}
	return 0
}

func (x *WebFootTeamPlayerBack) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetMarketValue() string {
	if x != nil {
		return x.MarketValue
	}
	return ""
}

func (x *WebFootTeamPlayerBack) GetContractExpiryTime() string {
	if x != nil {
		return x.ContractExpiryTime
	}
	return ""
}

//球队详情 - 球队转会年份
type WebFootTeamTransferYearRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"` //请求语言
	TeamId   int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`    //球队ID
}

func (x *WebFootTeamTransferYearRequest) Reset() {
	*x = WebFootTeamTransferYearRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamTransferYearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamTransferYearRequest) ProtoMessage() {}

func (x *WebFootTeamTransferYearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamTransferYearRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamTransferYearRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{9}
}

func (x *WebFootTeamTransferYearRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamTransferYearRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type WebFootTeamTransferYearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int64 `protobuf:"varint,1,rep,packed,name=Data,proto3" json:"Data,omitempty"`
}

func (x *WebFootTeamTransferYearResponse) Reset() {
	*x = WebFootTeamTransferYearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamTransferYearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamTransferYearResponse) ProtoMessage() {}

func (x *WebFootTeamTransferYearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamTransferYearResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamTransferYearResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{10}
}

func (x *WebFootTeamTransferYearResponse) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

//球队详情 - 球队转会记录
type WebFootTeamTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`          //请求语言
	TeamId       int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`             //球队ID
	TransferType int64  `protobuf:"varint,6,opt,name=transferType,proto3" json:"transferType,omitempty"` //转会类型 1.转入，2转出
	Year         int64  `protobuf:"varint,7,opt,name=Year,proto3" json:"Year,omitempty"`                 //转会年份过滤
}

func (x *WebFootTeamTransferRequest) Reset() {
	*x = WebFootTeamTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamTransferRequest) ProtoMessage() {}

func (x *WebFootTeamTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamTransferRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamTransferRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{11}
}

func (x *WebFootTeamTransferRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamTransferRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *WebFootTeamTransferRequest) GetTransferType() int64 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *WebFootTeamTransferRequest) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

type WebFootTeamTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPrice   float32                `protobuf:"fixed32,5,opt,name=TotalPrice,proto3" json:"TotalPrice,omitempty"`    //总转会金额
	TransferData []*WebFootTeamTransfer `protobuf:"bytes,21,rep,name=transferData,proto3" json:"transferData,omitempty"` //转会记录
}

func (x *WebFootTeamTransferResponse) Reset() {
	*x = WebFootTeamTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamTransferResponse) ProtoMessage() {}

func (x *WebFootTeamTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamTransferResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamTransferResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{12}
}

func (x *WebFootTeamTransferResponse) GetTotalPrice() float32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *WebFootTeamTransferResponse) GetTransferData() []*WebFootTeamTransfer {
	if x != nil {
		return x.TransferData
	}
	return nil
}

type WebFootTeamTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                    //球员id
	Name         string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`                 //球员名称
	Image        string  `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`               //球员头像
	Age          string  `protobuf:"bytes,4,opt,name=age,proto3" json:"age,omitempty"`                   //球员年龄
	TransferType string  `protobuf:"bytes,9,opt,name=transferType,proto3" json:"transferType,omitempty"` //转会类型 转入，转出
	Price        float32 `protobuf:"fixed32,6,opt,name=price,proto3" json:"price,omitempty"`             //转会金额
	TeamId       string  `protobuf:"bytes,10,opt,name=TeamId,proto3" json:"TeamId,omitempty"`            //来自...球队或从...球队过来的id
	TeamName     string  `protobuf:"bytes,7,opt,name=TeamName,proto3" json:"TeamName,omitempty"`         //来自...球队或从...球队过来名称
	StartTime    string  `protobuf:"bytes,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"`       //来自...球队或从...球队的时间
}

func (x *WebFootTeamTransfer) Reset() {
	*x = WebFootTeamTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamTransfer) ProtoMessage() {}

func (x *WebFootTeamTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamTransfer.ProtoReflect.Descriptor instead.
func (*WebFootTeamTransfer) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{13}
}

func (x *WebFootTeamTransfer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WebFootTeamTransfer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebFootTeamTransfer) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *WebFootTeamTransfer) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *WebFootTeamTransfer) GetTransferType() string {
	if x != nil {
		return x.TransferType
	}
	return ""
}

func (x *WebFootTeamTransfer) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *WebFootTeamTransfer) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *WebFootTeamTransfer) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *WebFootTeamTransfer) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type WebFootInjuryOrSuspension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`              //球员id
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`           //球员名称
	Image     string `protobuf:"bytes,3,opt,name=Image,proto3" json:"Image,omitempty"`         //球员头像
	Age       string `protobuf:"bytes,7,opt,name=age,proto3" json:"age,omitempty"`             //球员年龄
	Reason    string `protobuf:"bytes,4,opt,name=Reason,proto3" json:"Reason,omitempty"`       //原因
	Position  string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`   //位置
	StartTime string `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"` //受伤或停赛开始时间
}

func (x *WebFootInjuryOrSuspension) Reset() {
	*x = WebFootInjuryOrSuspension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootInjuryOrSuspension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootInjuryOrSuspension) ProtoMessage() {}

func (x *WebFootInjuryOrSuspension) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootInjuryOrSuspension.ProtoReflect.Descriptor instead.
func (*WebFootInjuryOrSuspension) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{14}
}

func (x *WebFootInjuryOrSuspension) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WebFootInjuryOrSuspension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebFootInjuryOrSuspension) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *WebFootInjuryOrSuspension) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *WebFootInjuryOrSuspension) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WebFootInjuryOrSuspension) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *WebFootInjuryOrSuspension) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

//球队详情 - 统计数据侧边栏
type WebFootTeamStatsMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"` //请求语言
}

func (x *WebFootTeamStatsMenuRequest) Reset() {
	*x = WebFootTeamStatsMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStatsMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStatsMenuRequest) ProtoMessage() {}

func (x *WebFootTeamStatsMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStatsMenuRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamStatsMenuRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{15}
}

func (x *WebFootTeamStatsMenuRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type WebFootTeamStatsMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WebFootTeamStatsMenu `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *WebFootTeamStatsMenuResponse) Reset() {
	*x = WebFootTeamStatsMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStatsMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStatsMenuResponse) ProtoMessage() {}

func (x *WebFootTeamStatsMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStatsMenuResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamStatsMenuResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{16}
}

func (x *WebFootTeamStatsMenuResponse) GetData() []*WebFootTeamStatsMenu {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebFootTeamStatsMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mark     string `protobuf:"bytes,2,opt,name=mark,proto3" json:"mark,omitempty"`                         //标记
	MarkName string `protobuf:"bytes,3,opt,name=mark_name,json=markName,proto3" json:"mark_name,omitempty"` //标记名称
}

func (x *WebFootTeamStatsMenu) Reset() {
	*x = WebFootTeamStatsMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStatsMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStatsMenu) ProtoMessage() {}

func (x *WebFootTeamStatsMenu) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStatsMenu.ProtoReflect.Descriptor instead.
func (*WebFootTeamStatsMenu) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{17}
}

func (x *WebFootTeamStatsMenu) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *WebFootTeamStatsMenu) GetMarkName() string {
	if x != nil {
		return x.MarkName
	}
	return ""
}

//球队详情 - 统计数据
type WebFootTeamStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`  //请求语言
	TeamId   int64  `protobuf:"varint,5,opt,name=teamId,proto3" json:"teamId,omitempty"`     //球队ID
	Mark     string `protobuf:"bytes,6,opt,name=mark,proto3" json:"mark,omitempty"`          //标记
	SeasonId int64  `protobuf:"varint,7,opt,name=seasonId,proto3" json:"seasonId,omitempty"` //赛季ID
}

func (x *WebFootTeamStatsRequest) Reset() {
	*x = WebFootTeamStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStatsRequest) ProtoMessage() {}

func (x *WebFootTeamStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStatsRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamStatsRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{18}
}

func (x *WebFootTeamStatsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamStatsRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *WebFootTeamStatsRequest) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *WebFootTeamStatsRequest) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type WebFootTeamStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WebFootTeamStats `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *WebFootTeamStatsResponse) Reset() {
	*x = WebFootTeamStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStatsResponse) ProtoMessage() {}

func (x *WebFootTeamStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStatsResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamStatsResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{19}
}

func (x *WebFootTeamStatsResponse) GetData() []*WebFootTeamStats {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebFootTeamStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank       string `protobuf:"bytes,1,opt,name=Rank,proto3" json:"Rank,omitempty"`             //排名
	PlayerId   string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`     //球员id
	PlayerName string `protobuf:"bytes,3,opt,name=playerName,proto3" json:"playerName,omitempty"` //球员名称
	Data       string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`             //数据
}

func (x *WebFootTeamStats) Reset() {
	*x = WebFootTeamStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamStats) ProtoMessage() {}

func (x *WebFootTeamStats) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamStats.ProtoReflect.Descriptor instead.
func (*WebFootTeamStats) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{20}
}

func (x *WebFootTeamStats) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *WebFootTeamStats) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *WebFootTeamStats) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *WebFootTeamStats) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

//球队详情 - 球队下的赛季列表
type WebFootTeamSeasonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`  //请求语言
	LeagueId int64  `protobuf:"varint,5,opt,name=leagueId,proto3" json:"leagueId,omitempty"` //联赛ID
	TeamId   int64  `protobuf:"varint,6,opt,name=teamId,proto3" json:"teamId,omitempty"`     //球队ID
}

func (x *WebFootTeamSeasonListRequest) Reset() {
	*x = WebFootTeamSeasonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamSeasonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamSeasonListRequest) ProtoMessage() {}

func (x *WebFootTeamSeasonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamSeasonListRequest.ProtoReflect.Descriptor instead.
func (*WebFootTeamSeasonListRequest) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{21}
}

func (x *WebFootTeamSeasonListRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WebFootTeamSeasonListRequest) GetLeagueId() int64 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *WebFootTeamSeasonListRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type WebFootTeamSeasonListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WebFootTeamSeasonList `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *WebFootTeamSeasonListResponse) Reset() {
	*x = WebFootTeamSeasonListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamSeasonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamSeasonListResponse) ProtoMessage() {}

func (x *WebFootTeamSeasonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamSeasonListResponse.ProtoReflect.Descriptor instead.
func (*WebFootTeamSeasonListResponse) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{22}
}

func (x *WebFootTeamSeasonListResponse) GetData() []*WebFootTeamSeasonList {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebFootTeamSeasonList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonName string `protobuf:"bytes,3,opt,name=seasonName,proto3" json:"seasonName,omitempty"` //赛季名称
	SeasonId   int64  `protobuf:"varint,5,opt,name=seasonId,proto3" json:"seasonId,omitempty"`    //赛季ID
}

func (x *WebFootTeamSeasonList) Reset() {
	*x = WebFootTeamSeasonList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_foot_team_detail_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebFootTeamSeasonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebFootTeamSeasonList) ProtoMessage() {}

func (x *WebFootTeamSeasonList) ProtoReflect() protoreflect.Message {
	mi := &file_web_foot_team_detail_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebFootTeamSeasonList.ProtoReflect.Descriptor instead.
func (*WebFootTeamSeasonList) Descriptor() ([]byte, []int) {
	return file_web_foot_team_detail_proto_rawDescGZIP(), []int{23}
}

func (x *WebFootTeamSeasonList) GetSeasonName() string {
	if x != nil {
		return x.SeasonName
	}
	return ""
}

func (x *WebFootTeamSeasonList) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

var File_web_foot_team_detail_proto protoreflect.FileDescriptor

var file_web_foot_team_detail_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x77, 0x65, 0x62, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x18,
	0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x9f, 0x02, 0x0a,
	0x19, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x45, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x6f,
	0x6d, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x48,
	0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9b,
	0x01, 0x0a, 0x17, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x18,
	0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x65,
	0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x02, 0x0a, 0x10, 0x57, 0x65,
	0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x77, 0x61, 0x79, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6c, 0x66, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6c, 0x66, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x6a, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xa0, 0x02, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x07, 0x77, 0x65, 0x62, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x77, 0x65, 0x62, 0x42, 0x61, 0x63, 0x6b,
	0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x05, 0x63, 0x6f, 0x61, 0x63,
	0x68, 0x12, 0x3c, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x47, 0x6f, 0x61, 0x6c, 0x6b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f,
	0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b,
	0x52, 0x0d, 0x77, 0x65, 0x62, 0x47, 0x6f, 0x61, 0x6c, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x4d, 0x69, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x0b, 0x77, 0x65,
	0x62, 0x4d, 0x69, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x77, 0x65, 0x62,
	0x56, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x56, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x22, 0x5a, 0x0a, 0x08, 0x57, 0x65, 0x62, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0xb7, 0x02, 0x0a, 0x15, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1e, 0x57, 0x65, 0x62,
	0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x1f, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x57, 0x65, 0x62, 0x46, 0x6f,
	0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x59, 0x65, 0x61,
	0x72, 0x22, 0x77, 0x0a, 0x1b, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xed, 0x01, 0x0a, 0x13, 0x57,
	0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x19, 0x57,
	0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x6a, 0x75, 0x72, 0x79, 0x4f, 0x72, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x1b, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x49, 0x0a, 0x1c, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x14,
	0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x17, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x18, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x46, 0x6f,
	0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6e, 0x0a, 0x1c, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x1d, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x15,
	0x57, 0x65, 0x62, 0x46, 0x6f, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_web_foot_team_detail_proto_rawDescOnce sync.Once
	file_web_foot_team_detail_proto_rawDescData = file_web_foot_team_detail_proto_rawDesc
)

func file_web_foot_team_detail_proto_rawDescGZIP() []byte {
	file_web_foot_team_detail_proto_rawDescOnce.Do(func() {
		file_web_foot_team_detail_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_foot_team_detail_proto_rawDescData)
	})
	return file_web_foot_team_detail_proto_rawDescData
}

var file_web_foot_team_detail_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_web_foot_team_detail_proto_goTypes = []interface{}{
	(*WebFootTeamDetailRequest)(nil),        // 0: WebFootTeamDetailRequest
	(*WebFootTeamDetailResponse)(nil),       // 1: WebFootTeamDetailResponse
	(*WebFootTeamMatchRequest)(nil),         // 2: WebFootTeamMatchRequest
	(*WebFootTeamMatchResponse)(nil),        // 3: WebFootTeamMatchResponse
	(*WebFootTeamMatch)(nil),                // 4: WebFootTeamMatch
	(*WebFootTeamPlayerRequest)(nil),        // 5: WebFootTeamPlayerRequest
	(*WebFootTeamPlayerResponse)(nil),       // 6: WebFootTeamPlayerResponse
	(*WebCoach)(nil),                        // 7: WebCoach
	(*WebFootTeamPlayerBack)(nil),           // 8: WebFootTeamPlayerBack
	(*WebFootTeamTransferYearRequest)(nil),  // 9: WebFootTeamTransferYearRequest
	(*WebFootTeamTransferYearResponse)(nil), // 10: WebFootTeamTransferYearResponse
	(*WebFootTeamTransferRequest)(nil),      // 11: WebFootTeamTransferRequest
	(*WebFootTeamTransferResponse)(nil),     // 12: WebFootTeamTransferResponse
	(*WebFootTeamTransfer)(nil),             // 13: WebFootTeamTransfer
	(*WebFootInjuryOrSuspension)(nil),       // 14: WebFootInjuryOrSuspension
	(*WebFootTeamStatsMenuRequest)(nil),     // 15: WebFootTeamStatsMenuRequest
	(*WebFootTeamStatsMenuResponse)(nil),    // 16: WebFootTeamStatsMenuResponse
	(*WebFootTeamStatsMenu)(nil),            // 17: WebFootTeamStatsMenu
	(*WebFootTeamStatsRequest)(nil),         // 18: WebFootTeamStatsRequest
	(*WebFootTeamStatsResponse)(nil),        // 19: WebFootTeamStatsResponse
	(*WebFootTeamStats)(nil),                // 20: WebFootTeamStats
	(*WebFootTeamSeasonListRequest)(nil),    // 21: WebFootTeamSeasonListRequest
	(*WebFootTeamSeasonListResponse)(nil),   // 22: WebFootTeamSeasonListResponse
	(*WebFootTeamSeasonList)(nil),           // 23: WebFootTeamSeasonList
}
var file_web_foot_team_detail_proto_depIdxs = []int32{
	4,  // 0: WebFootTeamMatchResponse.matchData:type_name -> WebFootTeamMatch
	8,  // 1: WebFootTeamPlayerResponse.webBack:type_name -> WebFootTeamPlayerBack
	7,  // 2: WebFootTeamPlayerResponse.coach:type_name -> WebCoach
	8,  // 3: WebFootTeamPlayerResponse.webGoalkeeper:type_name -> WebFootTeamPlayerBack
	8,  // 4: WebFootTeamPlayerResponse.webMidfield:type_name -> WebFootTeamPlayerBack
	8,  // 5: WebFootTeamPlayerResponse.webVanguard:type_name -> WebFootTeamPlayerBack
	13, // 6: WebFootTeamTransferResponse.transferData:type_name -> WebFootTeamTransfer
	17, // 7: WebFootTeamStatsMenuResponse.Data:type_name -> WebFootTeamStatsMenu
	20, // 8: WebFootTeamStatsResponse.Data:type_name -> WebFootTeamStats
	23, // 9: WebFootTeamSeasonListResponse.Data:type_name -> WebFootTeamSeasonList
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_web_foot_team_detail_proto_init() }
func file_web_foot_team_detail_proto_init() {
	if File_web_foot_team_detail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web_foot_team_detail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebCoach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamPlayerBack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamTransferYearRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamTransferYearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootInjuryOrSuspension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStatsMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStatsMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStatsMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamSeasonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamSeasonListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_foot_team_detail_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebFootTeamSeasonList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_foot_team_detail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_web_foot_team_detail_proto_goTypes,
		DependencyIndexes: file_web_foot_team_detail_proto_depIdxs,
		MessageInfos:      file_web_foot_team_detail_proto_msgTypes,
	}.Build()
	File_web_foot_team_detail_proto = out.File
	file_web_foot_team_detail_proto_rawDesc = nil
	file_web_foot_team_detail_proto_goTypes = nil
	file_web_foot_team_detail_proto_depIdxs = nil
}
