// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: match_real_time_v2.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchRealTimeRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   int64   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`            //即时的状态 0全部,1：未开始，2为开始，3为结束
	DateTime string  `protobuf:"bytes,2,opt,name=dateTime,proto3" json:"dateTime,omitempty"`         //日期 - 全部比赛 2021-11-09
	EventIds []int64 `protobuf:"varint,3,rep,packed,name=eventIds,proto3" json:"eventIds,omitempty"` //比赛筛选
}

func (x *MatchRealTimeRequestV2) Reset() {
	*x = MatchRealTimeRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_real_time_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRealTimeRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRealTimeRequestV2) ProtoMessage() {}

func (x *MatchRealTimeRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_match_real_time_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRealTimeRequestV2.ProtoReflect.Descriptor instead.
func (*MatchRealTimeRequestV2) Descriptor() ([]byte, []int) {
	return file_match_real_time_v2_proto_rawDescGZIP(), []int{0}
}

func (x *MatchRealTimeRequestV2) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MatchRealTimeRequestV2) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *MatchRealTimeRequestV2) GetEventIds() []int64 {
	if x != nil {
		return x.EventIds
	}
	return nil
}

type MatchRealTimeResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64                  `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	List  []*MatchRealTimeInfoV2 `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MatchRealTimeResponseV2) Reset() {
	*x = MatchRealTimeResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_real_time_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRealTimeResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRealTimeResponseV2) ProtoMessage() {}

func (x *MatchRealTimeResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_match_real_time_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRealTimeResponseV2.ProtoReflect.Descriptor instead.
func (*MatchRealTimeResponseV2) Descriptor() ([]byte, []int) {
	return file_match_real_time_v2_proto_rawDescGZIP(), []int{1}
}

func (x *MatchRealTimeResponseV2) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MatchRealTimeResponseV2) GetList() []*MatchRealTimeInfoV2 {
	if x != nil {
		return x.List
	}
	return nil
}

type MatchRealTimeInfoV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mcid   int64  `protobuf:"varint,1,opt,name=mcid,proto3" json:"mcid,omitempty"`     //当前记录ID 赛事iD用于收藏传递
	Tid    int64  `protobuf:"varint,2,opt,name=tid,proto3" json:"tid,omitempty"`       //联赛id
	Mid    int64  `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`       //主队ID
	Cid    int64  `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`       //客队ID
	Sc     string `protobuf:"bytes,5,opt,name=sc,proto3" json:"sc,omitempty"`          //主客总得分: 0-2
	Stm    int64  `protobuf:"varint,6,opt,name=stm,proto3" json:"stm,omitempty"`       //当前比赛开始时间戳
	Stid   int64  `protobuf:"varint,7,opt,name=stid,proto3" json:"stid,omitempty"`     //数据中心的比赛状态
	St     int64  `protobuf:"varint,8,opt,name=st,proto3" json:"st,omitempty"`         //比赛大状态
	Hts    []*Rs  `protobuf:"bytes,9,rep,name=hts,proto3" json:"hts,omitempty"`        //主队每节得分
	Ats    []*Rs  `protobuf:"bytes,10,rep,name=ats,proto3" json:"ats,omitempty"`       //客队每节得分
	Rk     string `protobuf:"bytes,11,opt,name=rk,proto3" json:"rk,omitempty"`         //主队排名-客队排名
	Reason string `protobuf:"bytes,12,opt,name=reason,proto3" json:"reason,omitempty"` //中断或者临时暂停原因
	Ctm    string `protobuf:"bytes,13,opt,name=ctm,proto3" json:"ctm,omitempty"`       //分类用的时间
	Ya     string `protobuf:"bytes,14,opt,name=ya,proto3" json:"ya,omitempty"`         //亚赔的即时指数
	Ou     string `protobuf:"bytes,15,opt,name=ou,proto3" json:"ou,omitempty"`         //欧盘
	Ov     string `protobuf:"bytes,16,opt,name=ov,proto3" json:"ov,omitempty"`         //大小球的即时指数
}

func (x *MatchRealTimeInfoV2) Reset() {
	*x = MatchRealTimeInfoV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_real_time_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRealTimeInfoV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRealTimeInfoV2) ProtoMessage() {}

func (x *MatchRealTimeInfoV2) ProtoReflect() protoreflect.Message {
	mi := &file_match_real_time_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRealTimeInfoV2.ProtoReflect.Descriptor instead.
func (*MatchRealTimeInfoV2) Descriptor() ([]byte, []int) {
	return file_match_real_time_v2_proto_rawDescGZIP(), []int{2}
}

func (x *MatchRealTimeInfoV2) GetMcid() int64 {
	if x != nil {
		return x.Mcid
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetSc() string {
	if x != nil {
		return x.Sc
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetStm() int64 {
	if x != nil {
		return x.Stm
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetStid() int64 {
	if x != nil {
		return x.Stid
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetSt() int64 {
	if x != nil {
		return x.St
	}
	return 0
}

func (x *MatchRealTimeInfoV2) GetHts() []*Rs {
	if x != nil {
		return x.Hts
	}
	return nil
}

func (x *MatchRealTimeInfoV2) GetAts() []*Rs {
	if x != nil {
		return x.Ats
	}
	return nil
}

func (x *MatchRealTimeInfoV2) GetRk() string {
	if x != nil {
		return x.Rk
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetCtm() string {
	if x != nil {
		return x.Ctm
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetYa() string {
	if x != nil {
		return x.Ya
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetOu() string {
	if x != nil {
		return x.Ou
	}
	return ""
}

func (x *MatchRealTimeInfoV2) GetOv() string {
	if x != nil {
		return x.Ov
	}
	return ""
}

type Rs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`      //节数，默认顺序为：一	二	三	四 节
	Score int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"` //得分
}

func (x *Rs) Reset() {
	*x = Rs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_real_time_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rs) ProtoMessage() {}

func (x *Rs) ProtoReflect() protoreflect.Message {
	mi := &file_match_real_time_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rs.ProtoReflect.Descriptor instead.
func (*Rs) Descriptor() ([]byte, []int) {
	return file_match_real_time_v2_proto_rawDescGZIP(), []int{3}
}

func (x *Rs) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Rs) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_match_real_time_v2_proto protoreflect.FileDescriptor

var file_match_real_time_v2_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x16, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x59, 0x0a, 0x17, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xbd, 0x02, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x63, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x73, 0x74, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x74, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x68, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x72, 0x73, 0x52, 0x03, 0x68, 0x74, 0x73, 0x12, 0x15,
	0x0a, 0x03, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x03, 0x2e, 0x72, 0x73,
	0x52, 0x03, 0x61, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x74, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x79, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x79, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x75, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x76, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x76, 0x22,
	0x2c, 0x0a, 0x02, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_real_time_v2_proto_rawDescOnce sync.Once
	file_match_real_time_v2_proto_rawDescData = file_match_real_time_v2_proto_rawDesc
)

func file_match_real_time_v2_proto_rawDescGZIP() []byte {
	file_match_real_time_v2_proto_rawDescOnce.Do(func() {
		file_match_real_time_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_real_time_v2_proto_rawDescData)
	})
	return file_match_real_time_v2_proto_rawDescData
}

var file_match_real_time_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_match_real_time_v2_proto_goTypes = []interface{}{
	(*MatchRealTimeRequestV2)(nil),  // 0: MatchRealTimeRequestV2
	(*MatchRealTimeResponseV2)(nil), // 1: MatchRealTimeResponseV2
	(*MatchRealTimeInfoV2)(nil),     // 2: MatchRealTimeInfoV2
	(*Rs)(nil),                      // 3: rs
}
var file_match_real_time_v2_proto_depIdxs = []int32{
	2, // 0: MatchRealTimeResponseV2.list:type_name -> MatchRealTimeInfoV2
	3, // 1: MatchRealTimeInfoV2.hts:type_name -> rs
	3, // 2: MatchRealTimeInfoV2.ats:type_name -> rs
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_match_real_time_v2_proto_init() }
func file_match_real_time_v2_proto_init() {
	if File_match_real_time_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_real_time_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRealTimeRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_real_time_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRealTimeResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_real_time_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRealTimeInfoV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_real_time_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_real_time_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_real_time_v2_proto_goTypes,
		DependencyIndexes: file_match_real_time_v2_proto_depIdxs,
		MessageInfos:      file_match_real_time_v2_proto_msgTypes,
	}.Build()
	File_match_real_time_v2_proto = out.File
	file_match_real_time_v2_proto_rawDesc = nil
	file_match_real_time_v2_proto_goTypes = nil
	file_match_real_time_v2_proto_depIdxs = nil
}
