// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: match_filtrate.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//比赛日历
type MatchFiltrateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabType  int64   `protobuf:"varint,6,opt,name=tabType,proto3" json:"tabType,omitempty"`        //1：NBA，2：竞篮，3：全部比赛，4：关注
	DateTime string  `protobuf:"bytes,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`       //日期 - 全部比赛 2021-11-09
	ComId    []int64 `protobuf:"varint,2,rep,packed,name=comId,proto3" json:"comId,omitempty"`     //联赛id 数组
	EventID  []int64 `protobuf:"varint,3,rep,packed,name=eventID,proto3" json:"eventID,omitempty"` //联赛id 数组
	Page     int64   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64   `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Language string  `protobuf:"bytes,7,opt,name=Language,proto3" json:"Language,omitempty"` //请求语言  1:zh  2:en
}

func (x *MatchFiltrateRequest) Reset() {
	*x = MatchFiltrateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_filtrate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchFiltrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFiltrateRequest) ProtoMessage() {}

func (x *MatchFiltrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_match_filtrate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFiltrateRequest.ProtoReflect.Descriptor instead.
func (*MatchFiltrateRequest) Descriptor() ([]byte, []int) {
	return file_match_filtrate_proto_rawDescGZIP(), []int{0}
}

func (x *MatchFiltrateRequest) GetTabType() int64 {
	if x != nil {
		return x.TabType
	}
	return 0
}

func (x *MatchFiltrateRequest) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *MatchFiltrateRequest) GetComId() []int64 {
	if x != nil {
		return x.ComId
	}
	return nil
}

func (x *MatchFiltrateRequest) GetEventID() []int64 {
	if x != nil {
		return x.EventID
	}
	return nil
}

func (x *MatchFiltrateRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MatchFiltrateRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MatchFiltrateRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type MatchFiltrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MatchFiltrate `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MatchFiltrateResponse) Reset() {
	*x = MatchFiltrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_filtrate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchFiltrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFiltrateResponse) ProtoMessage() {}

func (x *MatchFiltrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_match_filtrate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFiltrateResponse.ProtoReflect.Descriptor instead.
func (*MatchFiltrateResponse) Descriptor() ([]byte, []int) {
	return file_match_filtrate_proto_rawDescGZIP(), []int{1}
}

func (x *MatchFiltrateResponse) GetData() []*MatchFiltrate {
	if x != nil {
		return x.Data
	}
	return nil
}

type MatchFiltrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string            `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	List  []*TournamentInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MatchFiltrate) Reset() {
	*x = MatchFiltrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_filtrate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchFiltrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFiltrate) ProtoMessage() {}

func (x *MatchFiltrate) ProtoReflect() protoreflect.Message {
	mi := &file_match_filtrate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchFiltrate.ProtoReflect.Descriptor instead.
func (*MatchFiltrate) Descriptor() ([]byte, []int) {
	return file_match_filtrate_proto_rawDescGZIP(), []int{2}
}

func (x *MatchFiltrate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MatchFiltrate) GetList() []*TournamentInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type TournamentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId   int64  `protobuf:"varint,1,opt,name=tournamentId,proto3" json:"tournamentId,omitempty"`
	Count          int64  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	TournamentName string `protobuf:"bytes,2,opt,name=tournamentName,proto3" json:"tournamentName,omitempty"`
	ChInitials     string `protobuf:"bytes,3,opt,name=chInitials,proto3" json:"chInitials,omitempty"`
}

func (x *TournamentInfo) Reset() {
	*x = TournamentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_filtrate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentInfo) ProtoMessage() {}

func (x *TournamentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_match_filtrate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentInfo.ProtoReflect.Descriptor instead.
func (*TournamentInfo) Descriptor() ([]byte, []int) {
	return file_match_filtrate_proto_rawDescGZIP(), []int{3}
}

func (x *TournamentInfo) GetTournamentId() int64 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *TournamentInfo) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TournamentInfo) GetTournamentName() string {
	if x != nil {
		return x.TournamentName
	}
	return ""
}

func (x *TournamentInfo) GetChInitials() string {
	if x != nil {
		return x.ChInitials
	}
	return ""
}

var File_match_filtrate_proto protoreflect.FileDescriptor

var file_match_filtrate_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x3b, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a,
	0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_filtrate_proto_rawDescOnce sync.Once
	file_match_filtrate_proto_rawDescData = file_match_filtrate_proto_rawDesc
)

func file_match_filtrate_proto_rawDescGZIP() []byte {
	file_match_filtrate_proto_rawDescOnce.Do(func() {
		file_match_filtrate_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_filtrate_proto_rawDescData)
	})
	return file_match_filtrate_proto_rawDescData
}

var file_match_filtrate_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_match_filtrate_proto_goTypes = []interface{}{
	(*MatchFiltrateRequest)(nil),  // 0: MatchFiltrateRequest
	(*MatchFiltrateResponse)(nil), // 1: MatchFiltrateResponse
	(*MatchFiltrate)(nil),         // 2: MatchFiltrate
	(*TournamentInfo)(nil),        // 3: TournamentInfo
}
var file_match_filtrate_proto_depIdxs = []int32{
	2, // 0: MatchFiltrateResponse.data:type_name -> MatchFiltrate
	3, // 1: MatchFiltrate.list:type_name -> TournamentInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_match_filtrate_proto_init() }
func file_match_filtrate_proto_init() {
	if File_match_filtrate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_filtrate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchFiltrateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_filtrate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchFiltrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_filtrate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchFiltrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_filtrate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_filtrate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_filtrate_proto_goTypes,
		DependencyIndexes: file_match_filtrate_proto_depIdxs,
		MessageInfos:      file_match_filtrate_proto_msgTypes,
	}.Build()
	File_match_filtrate_proto = out.File
	file_match_filtrate_proto_rawDesc = nil
	file_match_filtrate_proto_goTypes = nil
	file_match_filtrate_proto_depIdxs = nil
}
